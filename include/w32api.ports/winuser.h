#ifndef _W32API_WINUSER_H_
#define _W32API_WINUSER_H_

#include <stdint.h>

#include <windef.h>
#include <winbase.h>
#include <wingdi.h>

#include "msgbox.h"

#ifndef WINVER
#define WINVER 0x0600
#endif

/* misc, clean up later? */
typedef void *HMONITOR;
typedef HANDLE HWDP;

typedef LRESULT (__stdcall * w32api_wnd_proc)(
	HWND,
	UINT,
	WPARAM,
	LPARAM);

typedef w32api_wnd_proc WNDPROC;


/* winuser flag bits and constants */
#define WH_MSGFILTER			(-1)
#define WH_JOURNALRECORD		(0)
#define WH_JOURNALPLAYBACK		(1)
#define WH_KEYBOARD			(2)
#define WH_GETMESSAGE			(3)
#define WH_CALLWNDPROC			(4)
#define WH_CBT				(5)
#define WH_SYSMSGFILTER			(6)
#define WH_MOUSE			(7)
#define WH_HARDWARE			(8)
#define WH_DEBUG			(9)
#define WH_SHELL			(10)
#define WH_FOREGROUNDIDLE		(11)
#define WH_CALLWNDPROCRET		(12)
#define WH_KEYBOARD_LL			(13)
#define WH_MOUSE_LL			(14)

#define WA_INACTIVE			0
#define WA_ACTIVE			1
#define WA_CLICKACTIVE			2

#define WH_MIN				(-1)
#define WH_MAX				WH_MOUSE_LL
#define WH_MINHOOK			WH_MIN
#define WH_MAXHOOK			WH_MAX

#define GW_HWNDFIRST			0
#define GW_HWNDLAST			1
#define GW_HWNDNEXT			2
#define GW_HWNDPREV			3
#define GW_OWNER			4
#define GW_CHILD			5
#define GW_ENABLEDPOPUP			6
#define GW_MAX				6

#define GET_WHEEL_DELTA_WPARAM(wParam) 	((short)HIWORD(wParam))

#define BS_GROUPBOX 			(0x00000007)

#define COLOR_BACKGROUND 		1
#define COLOR_WINDOW 			5
#define COLOR_WINDOWTEXT 		8
#define COLOR_INFOBK 			24
#define COLOR_INFOTEXT 			23
#define COLOR_BTNFACE 			15
#define COLOR_3DFACE 			COLOR_BTNFACE

#define SPI_GETBEEP			0x0001
#define SPI_SETBEEP			0x0002
#define SPI_GETMOUSE			0x0003
#define SPI_SETMOUSE			0x0004
#define SPI_GETBORDER			0x0005
#define SPI_SETBORDER			0x0006
#define SPI_GETKEYBOARDSPEED		0x000A
#define SPI_SETKEYBOARDSPEED		0x000B
#define SPI_LANGDRIVER			0x000C
#define SPI_ICONHORIZONTALSPACING	0x000D
#define SPI_GETSCREENSAVETIMEOUT	0x000E
#define SPI_SETSCREENSAVETIMEOUT	0x000F
#define SPI_GETSCREENSAVEACTIVE		0x0010
#define SPI_SETSCREENSAVEACTIVE		0x0011
#define SPI_GETGRIDGRANULARITY		0x0012
#define SPI_SETGRIDGRANULARITY		0x0013
#define SPI_SETDESKWALLPAPER		0x0014
#define SPI_SETDESKPATTERN		0x0015
#define SPI_GETKEYBOARDDELAY		0x0016
#define SPI_SETKEYBOARDDELAY		0x0017
#define SPI_ICONVERTICALSPACING		0x0018
#define SPI_GETICONTITLEWRAP		0x0019
#define SPI_SETICONTITLEWRAP		0x001A
#define SPI_GETMENUDROPALIGNMENT	0x001B
#define SPI_SETMENUDROPALIGNMENT	0x001C
#define SPI_SETDOUBLECLKWIDTH		0x001D
#define SPI_SETDOUBLECLKHEIGHT		0x001E
#define SPI_GETICONTITLELOGFONT		0x001F
#define SPI_SETDOUBLECLICKTIME		0x0020
#define SPI_SETMOUSEBUTTONSWAP		0x0021
#define SPI_SETICONTITLELOGFONT		0x0022
#define SPI_GETFASTTASKSWITCH		0x0023
#define SPI_SETFASTTASKSWITCH		0x0024
#define SPI_SETDRAGFULLWINDOWS		0x0025
#define SPI_GETDRAGFULLWINDOWS		0x0026
#define SPI_GETNONCLIENTMETRICS		0x0029
#define SPI_SETNONCLIENTMETRICS		0x002A
#define SPI_GETMINIMIZEDMETRICS		0x002B
#define SPI_SETMINIMIZEDMETRICS		0x002C
#define SPI_GETICONMETRICS		0x002D
#define SPI_SETICONMETRICS		0x002E
#define SPI_SETWORKAREA			0x002F
#define SPI_GETWORKAREA			0x0030
#define SPI_SETPENWINDOWS		0x0031

#define SPI_GETHIGHCONTRAST		0x0042
#define SPI_SETHIGHCONTRAST		0x0043
#define SPI_GETKEYBOARDPREF		0x0044
#define SPI_SETKEYBOARDPREF		0x0045
#define SPI_GETSCREENREADER		0x0046
#define SPI_SETSCREENREADER		0x0047
#define SPI_GETANIMATION		0x0048
#define SPI_SETANIMATION		0x0049
#define SPI_GETFONTSMOOTHING		0x004A
#define SPI_SETFONTSMOOTHING		0x004B
#define SPI_SETDRAGWIDTH		0x004C
#define SPI_SETDRAGHEIGHT		0x004D
#define SPI_SETHANDHELD			0x004E
#define SPI_GETLOWPOWERTIMEOUT		0x004F
#define SPI_GETPOWEROFFTIMEOUT		0x0050
#define SPI_SETLOWPOWERTIMEOUT		0x0051
#define SPI_SETPOWEROFFTIMEOUT		0x0052
#define SPI_GETLOWPOWERACTIVE		0x0053
#define SPI_GETPOWEROFFACTIVE		0x0054
#define SPI_SETLOWPOWERACTIVE		0x0055
#define SPI_SETPOWEROFFACTIVE		0x0056
#define SPI_SETCURSORS			0x0057
#define SPI_SETICONS			0x0058
#define SPI_GETDEFAULTINPUTLANG		0x0059
#define SPI_SETDEFAULTINPUTLANG		0x005A
#define SPI_SETLANGTOGGLE		0x005B
#define SPI_GETWINDOWSEXTENSION		0x005C
#define SPI_SETMOUSETRAILS		0x005D
#define SPI_GETMOUSETRAILS		0x005E
#define SPI_SETSCREENSAVERRUNNING	0x0061
#define SPI_SCREENSAVERRUNNING		SPI_SETSCREENSAVERRUNNING
#define SPI_GETFILTERKEYS		0x0032
#define SPI_SETFILTERKEYS		0x0033
#define SPI_GETTOGGLEKEYS		0x0034
#define SPI_SETTOGGLEKEYS		0x0035
#define SPI_GETMOUSEKEYS		0x0036
#define SPI_SETMOUSEKEYS		0x0037
#define SPI_GETSHOWSOUNDS		0x0038
#define SPI_SETSHOWSOUNDS		0x0039
#define SPI_GETSTICKYKEYS		0x003A
#define SPI_SETSTICKYKEYS		0x003B
#define SPI_GETACCESSTIMEOUT		0x003C
#define SPI_SETACCESSTIMEOUT		0x003D
#define SPI_GETSERIALKEYS		0x003E
#define SPI_SETSERIALKEYS		0x003F
#define SPI_GETSOUNDSENTRY		0x0040
#define SPI_SETSOUNDSENTRY		0x0041
#define SPI_GETSNAPTODEFBUTTON		0x005F
#define SPI_SETSNAPTODEFBUTTON		0x0060
#define SPI_GETMOUSEHOVERWIDTH		0x0062
#define SPI_SETMOUSEHOVERWIDTH		0x0063
#define SPI_GETMOUSEHOVERHEIGHT		0x0064
#define SPI_SETMOUSEHOVERHEIGHT		0x0065
#define SPI_GETMOUSEHOVERTIME		0x0066
#define SPI_SETMOUSEHOVERTIME		0x0067
#define SPI_GETWHEELSCROLLLINES		0x0068
#define SPI_SETWHEELSCROLLLINES		0x0069
#define SPI_GETMENUSHOWDELAY		0x006A
#define SPI_SETMENUSHOWDELAY		0x006B
#if _WIN32_WINNT >= 0x0600
#define SPI_GETWHEELSCROLLCHARS		0x006C
#define SPI_SETWHEELSCROLLCHARS		0x006D
#endif
#define SPI_GETSHOWIMEUI		0x006E
#define SPI_SETSHOWIMEUI		0x006F
#define SPI_GETMOUSESPEED		0x0070
#define SPI_SETMOUSESPEED		0x0071
#define SPI_GETSCREENSAVERRUNNING	0x0072
#define SPI_GETDESKWALLPAPER		0x0073
#if WINVER >= 0x0600
#define SPI_GETAUDIODESCRIPTION		0x0074
#define SPI_SETAUDIODESCRIPTION		0x0075
#define SPI_GETSCREENSAVESECURE		0x0076
#define SPI_SETSCREENSAVESECURE		0x0077
#endif
#if _WIN32_WINNT >= 0x0601
#define SPI_GETHUNGAPPTIMEOUT		0x0078
#define SPI_SETHUNGAPPTIMEOUT		0x0079
#define SPI_GETWAITTOKILLTIMEOUT	0x007a
#define SPI_SETWAITTOKILLTIMEOUT	0x007b
#define SPI_GETWAITTOKILLSERVICETIMEOUT	0x007c
#define SPI_SETWAITTOKILLSERVICETIMEOUT	0x007d
#define SPI_GETMOUSEDOCKTHRESHOLD	0x007e
#define SPI_SETMOUSEDOCKTHRESHOLD	0x007f
#define SPI_GETPENDOCKTHRESHOLD		0x0080
#define SPI_SETPENDOCKTHRESHOLD		0x0081
#define SPI_GETWINARRANGING		0x0082
#define SPI_SETWINARRANGING		0x0083
#define SPI_GETMOUSEDRAGOUTTHRESHOLD	0x0084
#define SPI_SETMOUSEDRAGOUTTHRESHOLD	0x0085
#define SPI_GETPENDRAGOUTTHRESHOLD	0x0086
#define SPI_SETPENDRAGOUTTHRESHOLD	0x0087
#define SPI_GETMOUSESIDEMOVETHRESHOLD	0x0088
#define SPI_SETMOUSESIDEMOVETHRESHOLD	0x0089
#define SPI_GETPENSIDEMOVETHRESHOLD	0x008a
#define SPI_SETPENSIDEMOVETHRESHOLD	0x008b
#define SPI_GETDRAGFROMMAXIMIZE		0x008c
#define SPI_SETDRAGFROMMAXIMIZE		0x008d
#define SPI_GETSNAPSIZING		0x008e
#define SPI_SETSNAPSIZING		0x008f
#define SPI_GETDOCKMOVING		0x0090
#define SPI_SETDOCKMOVING		0x0091
#endif
#if WINVER >= 0x0602
#define SPI_GETTOUCHPREDICTIONPARAMETERS	0x009c
#define SPI_SETTOUCHPREDICTIONPARAMETERS	0x009d
#define SPI_GETLOGICALDPIOVERRIDE	0x009e
#define SPI_SETLOGICALDPIOVERRIDE	0x009f
#define SPI_GETMOUSECORNERCLIPLENGTH	0x00a0
#define SPI_SETMOUSECORNERCLIPLENGTH	0x00a1
#define SPI_GETMENURECT			0x00a2
#define SPI_SETMENURECT			0x00a3
#endif

#define SPI_GETACTIVEWINDOWTRACKING	0x1000
#define SPI_SETACTIVEWINDOWTRACKING	0x1001
#define SPI_GETMENUANIMATION		0x1002
#define SPI_SETMENUANIMATION		0x1003
#define SPI_GETCOMBOBOXANIMATION	0x1004
#define SPI_SETCOMBOBOXANIMATION	0x1005
#define SPI_GETLISTBOXSMOOTHSCROLLING	0x1006
#define SPI_SETLISTBOXSMOOTHSCROLLING	0x1007
#define SPI_GETGRADIENTCAPTIONS		0x1008
#define SPI_SETGRADIENTCAPTIONS		0x1009
#define SPI_GETKEYBOARDCUES		0x100A
#define SPI_SETKEYBOARDCUES		0x100B
#define SPI_GETMENUUNDERLINES		SPI_GETKEYBOARDCUES
#define SPI_SETMENUUNDERLINES		SPI_SETKEYBOARDCUES
#define SPI_GETACTIVEWNDTRKZORDER	0x100C
#define SPI_SETACTIVEWNDTRKZORDER	0x100D
#define SPI_GETHOTTRACKING		0x100E
#define SPI_SETHOTTRACKING		0x100F
#define SPI_GETMENUFADE			0x1012
#define SPI_SETMENUFADE			0x1013
#define SPI_GETSELECTIONFADE		0x1014
#define SPI_SETSELECTIONFADE		0x1015
#define SPI_GETTOOLTIPANIMATION		0x1016
#define SPI_SETTOOLTIPANIMATION		0x1017
#define SPI_GETTOOLTIPFADE		0x1018
#define SPI_SETTOOLTIPFADE		0x1019
#define SPI_GETCURSORSHADOW		0x101A
#define SPI_SETCURSORSHADOW		0x101B
#define SPI_GETMOUSESONAR		0x101C
#define SPI_SETMOUSESONAR		0x101D
#define SPI_GETMOUSECLICKLOCK		0x101E
#define SPI_SETMOUSECLICKLOCK		0x101F
#define SPI_GETMOUSEVANISH		0x1020
#define SPI_SETMOUSEVANISH		0x1021
#define SPI_GETFLATMENU			0x1022
#define SPI_SETFLATMENU			0x1023
#define SPI_GETDROPSHADOW		0x1024
#define SPI_SETDROPSHADOW		0x1025
#define SPI_GETBLOCKSENDINPUTRESETS	0x1026
#define SPI_SETBLOCKSENDINPUTRESETS	0x1027
#define SPI_GETUIEFFECTS		0x103E
#define SPI_SETUIEFFECTS		0x103F
#if _WIN32_WINNT >= 0x0600
#define SPI_GETDISABLEOVERLAPPEDCONTENT	0x1040
#define SPI_SETDISABLEOVERLAPPEDCONTENT	0x1041
#define SPI_GETCLIENTAREAANIMATION	0x1042
#define SPI_SETCLIENTAREAANIMATION	0x1043
#define SPI_GETCLEARTYPE		0x1048
#define SPI_SETCLEARTYPE		0x1049
#define SPI_GETSPEECHRECOGNITION	0x104a
#define SPI_SETSPEECHRECOGNITION	0x104b
#endif
#if WINVER >= 0x0601
#define SPI_GETCARETBROWSING		0x104c
#define SPI_SETCARETBROWSING		0x104d
#define SPI_GETTHREADLOCALINPUTSETTINGS	0x104e
#define SPI_SETTHREADLOCALINPUTSETTINGS	0x104f
#define SPI_GETSYSTEMLANGUAGEBAR	0x1050
#define SPI_SETSYSTEMLANGUAGEBAR	0x1051
#endif
#define SPI_GETFOREGROUNDLOCKTIMEOUT	0x2000
#define SPI_SETFOREGROUNDLOCKTIMEOUT	0x2001
#define SPI_GETACTIVEWNDTRKTIMEOUT	0x2002
#define SPI_SETACTIVEWNDTRKTIMEOUT	0x2003
#define SPI_GETFOREGROUNDFLASHCOUNT	0x2004
#define SPI_SETFOREGROUNDFLASHCOUNT	0x2005
#define SPI_GETCARETWIDTH		0x2006
#define SPI_SETCARETWIDTH		0x2007
#define SPI_GETMOUSECLICKLOCKTIME	0x2008
#define SPI_SETMOUSECLICKLOCKTIME	0x2009
#define SPI_GETFONTSMOOTHINGTYPE	0x200A
#define SPI_SETFONTSMOOTHINGTYPE	0x200B

#define SPI_GETFONTSMOOTHINGCONTRAST	0x200C
#define SPI_SETFONTSMOOTHINGCONTRAST	0x200D
#define SPI_GETFOCUSBORDERWIDTH		0x200E
#define SPI_SETFOCUSBORDERWIDTH		0x200F
#define SPI_GETFOCUSBORDERHEIGHT	0x2010
#define SPI_SETFOCUSBORDERHEIGHT	0x2011
#define SPI_GETFONTSMOOTHINGORIENTATION	0x2012
#define SPI_SETFONTSMOOTHINGORIENTATION	0x2013
#if _WIN32_WINNT >= 0x0600
#define SPI_GETMINIMUMHITRADIUS		0x2014
#define SPI_SETMINIMUMHITRADIUS		0x2015
#define SPI_GETMESSAGEDURATION		0x2016
#define SPI_SETMESSAGEDURATION		0x2017
#endif
#if WINVER >= 0x0602
#define SPI_GETCONTACTVISUALIZATION	0x2018
#define SPI_SETCONTACTVISUALIZATION	0x2019
#define SPI_GETGESTUREVISUALIZATION	0x201a
#define SPI_SETGESTUREVISUALIZATION	0x201b
#endif

#define SB_HORZ				0
#define SB_VERT				1
#define SB_CTL				2
#define SB_BOTH				3

#define SB_LINEUP			0
#define SB_LINELEFT			0
#define SB_LINEDOWN			1
#define SB_LINERIGHT			1
#define SB_PAGEUP			2
#define SB_PAGELEFT			2
#define SB_PAGEDOWN			3
#define SB_PAGERIGHT			3
#define SB_THUMBPOSITION		4
#define SB_THUMBTRACK			5
#define SB_TOP				6
#define SB_LEFT				6
#define SB_BOTTOM			7
#define SB_RIGHT			7
#define SB_ENDSCROLL			8

#define SC_CLOSE			0xF060
#define SC_KEYMENU			0xF100
#define SC_MOVE				0xF010
#define SC_RESTORE			0xF120
#define SC_SIZE				0xF000
#define SC_MINIMIZE			0xF020
#define SC_MAXIMIZE			0xF030

#define DT_TOP				0x00000000
#define DT_LEFT				0x00000000
#define DT_CENTER			0x00000001
#define DT_RIGHT			0x00000002
#define DT_VCENTER			0x00000004
#define DT_BOTTOM			0x00000008
#define DT_WORDBREAK			0x00000010
#define DT_SINGLELINE			0x00000020
#define DT_EXPANDTABS			0x00000040
#define DT_TABSTOP			0x00000080
#define DT_NOCLIP			0x00000100
#define DT_EXTERNALLEADING		0x00000200
#define DT_CALCRECT			0x00000400
#define DT_NOPREFIX			0x00000800
#define DT_INTERNAL			0x00001000
#define DT_EDITCONTROL			0x00002000
#define DT_PATH_ELLIPSIS		0x00004000
#define DT_END_ELLIPSIS			0x00008000
#define DT_MODIFYSTRING			0x00010000
#define DT_RTLREADING			0x00020000
#define DT_WORD_ELLIPSIS		0x00040000
#define DT_NOFULLWIDTHCHARBREAK		0x00080000
#define DT_HIDEPREFIX			0x00100000
#define DT_PREFIXONLY			0x00200000

#define DS_MODALFRAME 			(0x80)
#define DS_SETFONT 			(0x40)
#define DS_FIXEDSYS 			(0x0008)
#define DS_SHELLFONT 			(DS_SETFONT | DS_FIXEDSYS)
#define DS_CENTERMOUSE			(0x1000)

#define SS_OWNERDRAW 			(0x0000000D)

#define ES_MULTILINE			(int32_t)(0x0004)
#define ES_PASSWORD 			(int32_t)(0x0020)
#define ES_AUTOVSCROLL			(int32_t)(0x0040)
#define ES_NOHIDESEL			(int32_t)(0x0100)

#define SIF_RANGE 			0x0001
#define SIF_PAGE 			0x0002
#define SIF_POS 			0x0004
#define SIF_DISABLENOSCROLL		0x0008
#define SIF_TRACKPOS 			0x0010
#define SIF_ALL 			(SIF_RANGE | SIF_PAGE | SIF_POS | SIF_TRACKPOS)

#define CF_TEXT 			1
#define CF_HDROP 			15
#define CF_UNICODETEXT 			13

#define SW_HIDE				0
#define SW_SHOWNORMAL			1
#define SW_NORMAL			1
#define SW_SHOWMINIMIZED		2
#define SW_SHOWMAXIMIZED		3
#define SW_MAXIMIZE			3
#define SW_SHOWNOACTIVATE		4
#define SW_SHOW				5
#define SW_MINIMIZE			6
#define SW_SHOWMINNOACTIVE		7
#define SW_SHOWNA			8
#define SW_RESTORE			9
#define SW_SHOWDEFAULT			10
#define SW_FORCEMINIMIZE		11
#define SW_MAX				11

#define SW_PARENTCLOSING		1
#define SW_OTHERZOOM			2
#define SW_PARENTOPENING		3
#define SW_OTHERUNZOOM			4

#define SW_SCROLLCHILDREN		0x0001
#define SW_INVALIDATE			0x0002
#define SW_ERASE			0x0004
#define SW_SMOOTHSCROLL			0x0010

#define SM_CXSCREEN			0
#define SM_CYSCREEN			1
#define SM_CXVSCROLL			2
#define SM_CYHSCROLL			3
#define SM_CYCAPTION			4
#define SM_CXBORDER			5
#define SM_CYBORDER			6
#define SM_CXDLGFRAME			7
#define SM_CYDLGFRAME			8
#define SM_CYVTHUMB			9
#define SM_CXHTHUMB			10
#define SM_CXICON			11
#define SM_CYICON			12
#define SM_CXCURSOR			13
#define SM_CYCURSOR			14
#define SM_CYMENU			15
#define SM_CXFULLSCREEN			16
#define SM_CYFULLSCREEN			17
#define SM_CYKANJIWINDOW		18
#define SM_MOUSEPRESENT			19
#define SM_CYVSCROLL			20
#define SM_CXHSCROLL			21
#define SM_DEBUG			22
#define SM_SWAPBUTTON			23
#define SM_RESERVED1			24
#define SM_RESERVED2			25
#define SM_RESERVED3			26
#define SM_RESERVED4			27
#define SM_CXMIN			28
#define SM_CYMIN			29
#define SM_CXSIZE			30
#define SM_CYSIZE			31
#define SM_CXFRAME			32
#define SM_CYFRAME			33
#define SM_CXMINTRACK			34
#define SM_CYMINTRACK			35
#define SM_CXDOUBLECLK			36
#define SM_CYDOUBLECLK			37
#define SM_CXICONSPACING		38
#define SM_CYICONSPACING		39
#define SM_MENUDROPALIGNMENT		40
#define SM_PENWINDOWS			41
#define SM_DBCSENABLED			42
#define SM_CMOUSEBUTTONS		43

#define SM_CXFIXEDFRAME			SM_CXDLGFRAME
#define SM_CYFIXEDFRAME			SM_CYDLGFRAME
#define SM_CXSIZEFRAME			SM_CXFRAME
#define SM_CYSIZEFRAME			SM_CYFRAME

#define SM_SECURE			44
#define SM_CXEDGE			45
#define SM_CYEDGE			46
#define SM_CXMINSPACING			47
#define SM_CYMINSPACING			48
#define SM_CXSMICON			49
#define SM_CYSMICON			50
#define SM_CYSMCAPTION			51
#define SM_CXSMSIZE			52
#define SM_CYSMSIZE			53
#define SM_CXMENUSIZE			54
#define SM_CYMENUSIZE			55
#define SM_ARRANGE			56
#define SM_CXMINIMIZED			57
#define SM_CYMINIMIZED			58
#define SM_CXMAXTRACK			59
#define SM_CYMAXTRACK			60
#define SM_CXMAXIMIZED			61
#define SM_CYMAXIMIZED			62
#define SM_NETWORK			63
#define SM_CLEANBOOT			67
#define SM_CXDRAG			68
#define SM_CYDRAG			69
#define SM_SHOWSOUNDS			70
#define SM_CXMENUCHECK			71
#define SM_CYMENUCHECK			72
#define SM_SLOWMACHINE			73
#define SM_MIDEASTENABLED		74
#define SM_MOUSEWHEELPRESENT		75
#define SM_XVIRTUALSCREEN		76
#define SM_YVIRTUALSCREEN		77
#define SM_CXVIRTUALSCREEN		78
#define SM_CYVIRTUALSCREEN		79
#define SM_CMONITORS			80
#define SM_SAMEDISPLAYFORMAT		81
#define SM_IMMENABLED			82
#define SM_CXFOCUSBORDER		83
#define SM_CYFOCUSBORDER		84
#define SM_TABLETPC			86
#define SM_MEDIACENTER			87
#define SM_STARTER			88
#define SM_SERVERR2			89
#if _WIN32_WINNT >= 0x0600
#define SM_MOUSEHORIZONTALWHEELPRESENT	91
#define SM_CXPADDEDBORDER		92
#endif
#if WINVER >= 0x0601
#define SM_DIGITIZER			94
#define SM_MAXIMUMTOUCHES		95
#endif

#if WINVER <= 0x501
#define SM_CMETRICS			91
#elif WINVER == 0x600
#define SM_CMETRICS			93
#else
#define SM_CMETRICS			97
#endif

#define SM_REMOTESESSION		0x1000
#define SM_SHUTTINGDOWN			0x2000
#define SM_REMOTECONTROL		0x2001
#define SM_CARETBLINKINGENABLED		0x2002
#if WINVER >= 0x0602
#define SM_CONVERTIBLESLATEMODE		0x2003
#define SM_SYSTEMDOCKED			0x2004
#endif

#define MIIM_STATE			0x00000001
#define MIIM_FTYPE			0x00000100
#define MIIM_DATA			0x00000020
#define MIIM_STRING			0x00000040
#define MIIM_BITMAP			0x00000080

#define MA_ACTIVATE			1
#define MA_ACTIVATEANDEAT		2
#define MA_NOACTIVATE			3
#define MA_NOACTIVATEANDEAT		4

#define MF_INSERT			(int32_t)(0x00000000)
#define MF_CHANGE			(int32_t)(0x00000080)
#define MF_APPEND			(int32_t)(0x00000100)
#define MF_DELETE			(int32_t)(0x00000200)
#define MF_REMOVE			(int32_t)(0x00001000)
#define MF_BYCOMMAND			(int32_t)(0x00000000)
#define MF_BYPOSITION			(int32_t)(0x00000400)
#define MF_SEPARATOR			(int32_t)(0x00000800)
#define MF_ENABLED			(int32_t)(0x00000000)
#define MF_GRAYED			(int32_t)(0x00000001)
#define MF_DISABLED			(int32_t)(0x00000002)
#define MF_UNCHECKED			(int32_t)(0x00000000)
#define MF_CHECKED			(int32_t)(0x00000008)
#define MF_USECHECKBITMAPS		(int32_t)(0x00000200)
#define MF_STRING			(int32_t)(0x00000000)
#define MF_BITMAP			(int32_t)(0x00000004)
#define MF_OWNERDRAW			(int32_t)(0x00000100)
#define MF_POPUP			(int32_t)(0x00000010)
#define MF_MENUBARBREAK			(int32_t)(0x00000020)
#define MF_MENUBREAK			(int32_t)(0x00000040)
#define MF_UNHILITE			(int32_t)(0x00000000)
#define MF_HILITE			(int32_t)(0x00000080)
#define MF_DEFAULT			(int32_t)(0x00001000)
#define MF_SYSMENU			(int32_t)(0x00002000)
#define MF_HELP				(int32_t)(0x00004000)
#define MF_RIGHTJUSTIFY			(int32_t)(0x00004000)
#define MF_MOUSESELECT			(int32_t)(0x00008000)
#define MF_END				(int32_t)(0x00000080)

#define MFT_STRING			MF_STRING

#define MK_LBUTTON			0x0001
#define MK_RBUTTON			0x0002
#define MK_SHIFT			0x0004
#define MK_CONTROL			0x0008
#define MK_MBUTTON			0x0010
#define MK_XBUTTON1			0x0020
#define MK_XBUTTON2			0x0040

#define LB_GETCURSEL 			0x0188
#define LB_GETTEXTLEN 			0x018A
#define LB_GETTEXT 			0x0189
#define LB_GETTEXTLEN 			0x018A
#define LB_RESETCONTENT 		0x0184
#define LB_RESETCONTENT 		0x0184
#define LB_ADDSTRING 			0x0180
#define LB_GETCOUNT 			0x018B
#define LB_SETCURSEL 			0x0186
#define LB_SETTABSTOPS 			0x0192

#define LR_DEFAULTCOLOR			0x0000
#define LR_MONOCHROME			0x0001
#define LR_COLOR			0x0002
#define LR_COPYRETURNORG		0x0004
#define LR_COPYDELETEORG		0x0008
#define LR_LOADFROMFILE			0x0010
#define LR_LOADTRANSPARENT		0x0020
#define LR_DEFAULTSIZE			0x0040
#define LR_VGACOLOR			0x0080
#define LR_LOADMAP3DCOLORS		0x1000
#define LR_CREATEDIBSECTION		0x2000
#define LR_COPYFROMRESOURCE		0x4000
#define LR_SHARED			0x8000

#define CB_RESETCONTENT 		0x014B
#define CB_ADDSTRING 			0x0143
#define CB_GETLBTEXT 			0x0148
#define CB_GETLBTEXTLEN 		0x0149
#define CB_GETCURSEL 			0x0147

#define EN_CHANGE 			0x0300
#define EN_KILLFOCUS 			0x0200
#define EN_SETFOCUS 			0x0100
#define EN_UPDATE 			0x0400

#define EM_GETSEL			0x00B0
#define EM_SETSEL			0x00B1
#define EM_GETRECT			0x00B2
#define EM_SETRECT			0x00B3
#define EM_SETRECTNP			0x00B4
#define EM_SCROLL			0x00B5
#define EM_LINESCROLL			0x00B6
#define EM_SCROLLCARET			0x00B7
#define EM_GETMODIFY			0x00B8
#define EM_SETMODIFY			0x00B9
#define EM_GETLINECOUNT			0x00BA
#define EM_LINEINDEX			0x00BB
#define EM_SETHANDLE			0x00BC
#define EM_GETHANDLE			0x00BD
#define EM_GETTHUMB			0x00BE
#define EM_LINELENGTH			0x00C1
#define EM_REPLACESEL			0x00C2
#define EM_GETLINE			0x00C4
#define EM_LIMITTEXT			0x00C5
#define EM_CANUNDO			0x00C6
#define EM_UNDO				0x00C7
#define EM_FMTLINES			0x00C8
#define EM_LINEFROMCHAR			0x00C9
#define EM_SETTABSTOPS			0x00CB
#define EM_SETPASSWORDCHAR		0x00CC
#define EM_EMPTYUNDOBUFFER		0x00CD
#define EM_GETFIRSTVISIBLELINE		0x00CE
#define EM_SETREADONLY			0x00CF
#define EM_SETWORDBREAKPROC		0x00D0
#define EM_GETWORDBREAKPROC		0x00D1
#define EM_GETPASSWORDCHAR		0x00D2
#define EM_SETMARGINS			0x00D3
#define EM_GETMARGINS			0x00D4
#define EM_SETLIMITTEXT			EM_LIMITTEXT
#define EM_GETLIMITTEXT			0x00D5
#define EM_POSFROMCHAR			0x00D6
#define EM_CHARFROMPOS			0x00D7
#define EM_SETIMESTATUS			0x00D8
#define EM_GETIMESTATUS			0x00D9

#define CBN_EDITCHANGE 			5
#define CBN_SELCHANGE 			1
#define CBN_KILLFOCUS 			4
#define CBN_SETFOCUS 			3

#define LBN_SELCHANGE 			1
#define LBN_DBLCLK 			2
#define LBN_KILLFOCUS 			5
#define LBN_SETFOCUS 			4

#define LBS_HASSTRINGS 			(0x0040)
#define LBS_NOTIFY 			(0x0001)
#define LBS_USETABSTOPS 		(0x0080)

#define CBS_DROPDOWN 			(0x0002)
#define CBS_HASSTRINGS 			(0x0200)
#define CBS_DROPDOWNLIST 		(0x0003)

#define BN_CLICKED 			0
#define BN_DOUBLECLICKED 		5
#define BN_DBLCLK 			BN_DOUBLECLICKED
#define BN_KILLFOCUS 			7
#define BN_SETFOCUS 			6
#define BN_PAINT			1

#define BF_ADJUST 			0x2000
#define BF_BOTTOM 			0x0008
#define BF_RIGHT 			0x0004
#define BF_TOP 				0x0002
#define BF_LEFT 			0x0001
#define BF_RECT 			(BF_LEFT | BF_TOP | BF_RIGHT | BF_BOTTOM)

#define BS_NOTIFY 			(0x00004000)
#define BS_AUTOCHECKBOX 		(0x00000003)
#define BS_AUTORADIOBUTTON 		(0x00000009)
#define BS_PUSHBUTTON 			(0x00000000)
#define BS_DEFPUSHBUTTON 		(0x00000001)

#define VK_LBUTTON			0x01
#define VK_RBUTTON			0x02
#define VK_CANCEL			0x03
#define VK_MBUTTON			0x04
#define VK_XBUTTON1			0x05
#define VK_XBUTTON2			0x06
#define VK_BACK				0x08
#define VK_TAB				0x09
#define VK_CLEAR			0x0C
#define VK_RETURN			0x0D
#define VK_SHIFT			0x10
#define VK_CONTROL			0x11
#define VK_MENU				0x12
#define VK_PAUSE			0x13
#define VK_CAPITAL			0x14
#define VK_KANA				0x15
#define VK_HANGEUL			0x15
#define VK_HANGUL			0x15
#define VK_JUNJA			0x17
#define VK_FINAL			0x18
#define VK_HANJA			0x19
#define VK_KANJI			0x19
#define VK_ESCAPE			0x1B
#define VK_CONVERT			0x1C
#define VK_NONCONVERT			0x1D
#define VK_ACCEPT			0x1E
#define VK_MODECHANGE			0x1F
#define VK_SPACE			0x20
#define VK_PRIOR			0x21
#define VK_NEXT				0x22
#define VK_END				0x23
#define VK_HOME				0x24
#define VK_LEFT				0x25
#define VK_UP				0x26
#define VK_RIGHT			0x27
#define VK_DOWN				0x28
#define VK_SELECT			0x29
#define VK_PRINT			0x2A
#define VK_EXECUTE			0x2B
#define VK_SNAPSHOT			0x2C
#define VK_INSERT			0x2D
#define VK_DELETE			0x2E
#define VK_HELP				0x2F

#define VK_LWIN				0x5B
#define VK_RWIN				0x5C
#define VK_APPS				0x5D
#define VK_SLEEP			0x5F
#define VK_NUMPAD0			0x60
#define VK_NUMPAD1			0x61
#define VK_NUMPAD2			0x62
#define VK_NUMPAD3			0x63
#define VK_NUMPAD4			0x64
#define VK_NUMPAD5			0x65
#define VK_NUMPAD6			0x66
#define VK_NUMPAD7			0x67
#define VK_NUMPAD8			0x68
#define VK_NUMPAD9			0x69
#define VK_MULTIPLY			0x6A
#define VK_ADD				0x6B
#define VK_SEPARATOR			0x6C
#define VK_SUBTRACT			0x6D
#define VK_DECIMAL			0x6E
#define VK_DIVIDE			0x6F
#define VK_F1				0x70
#define VK_F2				0x71
#define VK_F3				0x72
#define VK_F4				0x73
#define VK_F5				0x74
#define VK_F6				0x75
#define VK_F7				0x76
#define VK_F8				0x77
#define VK_F9				0x78
#define VK_F10				0x79
#define VK_F11				0x7A
#define VK_F12				0x7B
#define VK_F13				0x7C
#define VK_F14				0x7D
#define VK_F15				0x7E
#define VK_F16				0x7F
#define VK_F17				0x80
#define VK_F18				0x81
#define VK_F19				0x82
#define VK_F20				0x83
#define VK_F21				0x84
#define VK_F22				0x85
#define VK_F23				0x86
#define VK_F24				0x87
#define VK_NUMLOCK			0x90
#define VK_SCROLL			0x91
#define VK_OEM_NEC_EQUAL		0x92
#define VK_OEM_FJ_JISHO			0x92
#define VK_OEM_FJ_MASSHOU		0x93
#define VK_OEM_FJ_TOUROKU		0x94
#define VK_OEM_FJ_LOYA			0x95
#define VK_OEM_FJ_ROYA			0x96
#define VK_LSHIFT			0xA0
#define VK_RSHIFT			0xA1
#define VK_LCONTROL			0xA2
#define VK_RCONTROL			0xA3
#define VK_LMENU			0xA4
#define VK_RMENU			0xA5
#define VK_BROWSER_BACK			0xA6
#define VK_BROWSER_FORWARD		0xA7
#define VK_BROWSER_REFRESH		0xA8
#define VK_BROWSER_STOP			0xA9
#define VK_BROWSER_SEARCH		0xAA
#define VK_BROWSER_FAVORITES		0xAB
#define VK_BROWSER_HOME			0xAC
#define VK_VOLUME_MUTE			0xAD
#define VK_VOLUME_DOWN			0xAE
#define VK_VOLUME_UP			0xAF
#define VK_MEDIA_NEXT_TRACK		0xB0
#define VK_MEDIA_PREV_TRACK		0xB1
#define VK_MEDIA_STOP			0xB2
#define VK_MEDIA_PLAY_PAUSE		0xB3
#define VK_LAUNCH_MAIL			0xB4
#define VK_LAUNCH_MEDIA_SELECT		0xB5
#define VK_LAUNCH_APP1			0xB6
#define VK_LAUNCH_APP2			0xB7
#define VK_OEM_1			0xBA
#define VK_OEM_PLUS			0xBB
#define VK_OEM_COMMA			0xBC
#define VK_OEM_MINUS			0xBD
#define VK_OEM_PERIOD			0xBE
#define VK_OEM_2			0xBF
#define VK_OEM_3			0xC0
#define VK_OEM_4			0xDB
#define VK_OEM_5			0xDC
#define VK_OEM_6			0xDD
#define VK_OEM_7			0xDE
#define VK_OEM_8			0xDF
#define VK_OEM_AX			0xE1
#define VK_OEM_102			0xE2
#define VK_ICO_HELP			0xE3
#define VK_ICO_00			0xE4
#define VK_PROCESSKEY			0xE5
#define VK_ICO_CLEAR			0xE6
#define VK_PACKET			0xE7
#define VK_OEM_RESET			0xE9
#define VK_OEM_JUMP			0xEA
#define VK_OEM_PA1			0xEB
#define VK_OEM_PA2			0xEC
#define VK_OEM_PA3			0xED
#define VK_OEM_WSCTRL			0xEE
#define VK_OEM_CUSEL			0xEF
#define VK_OEM_ATTN			0xF0
#define VK_OEM_FINISH			0xF1
#define VK_OEM_COPY			0xF2
#define VK_OEM_AUTO			0xF3
#define VK_OEM_ENLW			0xF4
#define VK_OEM_BACKTAB			0xF5
#define VK_ATTN				0xF6
#define VK_CRSEL			0xF7
#define VK_EXSEL			0xF8
#define VK_EREOF			0xF9
#define VK_PLAY				0xFA
#define VK_ZOOM				0xFB
#define VK_NONAME			0xFC
#define VK_PA1				0xFD
#define VK_OEM_CLEAR			0xFE

#define KF_EXTENDED			0x0100
#define KF_DLGMODE			0x0800
#define KF_MENUMODE			0x1000
#define KF_ALTDOWN			0x2000
#define KF_REPEAT			0x4000
#define KF_UP				0x8000

#define KLF_ACTIVATE			0x00000001
#define KLF_SUBSTITUTE_OK		0x00000002
#define KLF_REORDER			0x00000008
#define KLF_REPLACELANG			0x00000010
#define KLF_NOTELLSHELL			0x00000080
#define KLF_SETFORPROCESS		0x00000100
#define KLF_SHIFTLOCK			0x00010000
#define KLF_RESET			0x40000000

#define KL_NAMELENGTH			9

#define LLKHF_EXTENDED			(KF_EXTENDED >> 8)
#define LLKHF_INJECTED			0x00000010
#define LLKHF_ALTDOWN			(KF_ALTDOWN >> 8)
#define LLKHF_UP			(KF_UP >> 8)

#define WM_NULL				0x0000
#define WM_CREATE			0x0001
#define WM_MOVE				0x0003
#define WM_APP                          0x8000
#define WM_NEXTDLGCTL			0x0028
#define WM_DISPLAYCHANGE		0x007E
#define WM_SETCURSOR			0x0020
#define WM_HSCROLL			0x0114
#define WM_VSCROLL 			0x0115
#define WM_SYSCOMMAND 			0x0112
#define WM_PAINT 			0x000F
#define WM_SETTEXT 			0x000C
#define WM_NCHITTEST 			0x0084
#define WM_ERASEBKGND 			0x0014
#define WM_DESTROY 			0x0002
#define WM_DESTROYCLIPBOARD		0x0307
#define WM_DROPFILES			0x0233
#define WM_RENDERFORMAT			0x0305
#define WM_CHANGECBCHAIN		0x030D
#define WM_DRAWCLIPBOARD		0x0308
#define WM_RENDERALLFORMATS		0x0306
#define WM_SETFONT 			0x0030
#define WM_KEYDOWN 			0x0100
#define WM_SYSKEYDOWN 			0x0104
#define WM_CHAR 			0x0102
#define WM_MBUTTONUP 			0x0208
#define WM_PASTE 			0x0302
#define WM_COMMAND 			0x0111
#define WM_SHOWWINDOW 			0x0018
#define WM_QUERYENDSESSION              0x0011
#define WM_QUIT 			0x0012
#define WM_DRAWITEM 			0x002B
#define WM_GETFONT 			0x0031
#define WM_USER 			0x0400
#define WM_CLOSE 			0x0010
#define WM_NOTIFY 			0x004E
#define WM_INITDIALOG 			0x0110
#define WM_INITMENUPOPUP		0x0117
#define WM_SETICON 			0x0080
#define WM_MENUCHAR 			0x0120
#define WM_MOUSEMOVE 			0x0200
#define WM_MOUSELEAVE			0x02A3
#define WM_NCCREATE 			0x0081
#define WM_NCMOUSEMOVE 			0x00A0
#define WM_MOUSEWHEEL 			0x020A
#define WM_LBUTTONDOWN 			0x0201
#define WM_RBUTTONDOWN 			0x0204
#define WM_MBUTTONDOWN 			0x0207
#define WM_LBUTTONDBLCLK		0x0203
#define WM_RBUTTONDBLCLK		0x0206
#define WM_MBUTTONDBLCLK		0x0209
#define WM_XBUTTONDBLCLK		0x020D
#define WM_LBUTTONUP 			0x0202
#define WM_RBUTTONUP 			0x0205
#define WM_KEYUP 			0x0101
#define WM_SYSKEYUP 			0x0105
#define WM_SYSCHAR 			0x0106
#define WM_INPUTLANGCHANGEREQUEST 	0x0050
#define WM_INPUTLANGCHANGE 		0x0051
#define WM_IME_NOTIFY 			0x0282
#define WM_IME_STARTCOMPOSITION 	0x010D
#define WM_IME_COMPOSITION 		0x010F
#define WM_INITMENU 			0x0116
#define WM_SIZE 			0x0005
#define WM_SIZING 			0x0214
#define WM_CAPTURECHANGED 		0x0215
#define WM_EXITSIZEMOVE 		0x0232
#define WM_ENTERSIZEMOVE 		0x0231
#define WM_MOVING 			0x0216
#define WM_KILLFOCUS 			0x0008
#define WM_SETFOCUS 			0x0007
#define WM_ACTIVATE 			0x0006
#define WM_FONTCHANGE 			0x001D
#define WM_SYSCOLORCHANGE 		0x0015
#define WM_WINDOWPOSCHANGED		0x0047
#define WM_WININICHANGE 		0x001A
#define WM_THEMECHANGED 		0x031A
#define WM_TIMER 			0x0113
#define WM_XBUTTONDOWN			0x020B
#define WM_XBUTTONUP 			0x020C
#define WM_ENDSESSION			0x0016
#define WM_GETMINMAXINFO		0x0024
#define WM_PALETTECHANGED		0x0311
#define WM_CTLCOLORSCROLLBAR		0x0137
#define WM_ACTIVATEAPP			0x001C
#define WM_GETICON			0x007F
#define WM_DEADCHAR			0x0103
#define WM_SYSDEADCHAR			0x0107
#define WM_HOTKEY			0x0312
#define WM_STYLECHANGING		0x007C
#define WM_STYLECHANGED			0x007D
#define WM_MOUSEACTIVATE		0x0021

#define WHEEL_DELTA			120

#define WMSZ_LEFT			1
#define WMSZ_RIGHT			2
#define WMSZ_TOP			3
#define WMSZ_TOPLEFT			4
#define WMSZ_TOPRIGHT			5
#define WMSZ_BOTTOM			6
#define WMSZ_BOTTOMLEFT			7
#define WMSZ_BOTTOMRIGHT		8


#define WA_INACTIVE 			0

#define MONITOR_DEFAULTTONULL		0x00000000
#define MONITOR_DEFAULTTOPRIMARY	0x00000001
#define MONITOR_DEFAULTTONEAREST	0x00000002

#define MNC_CLOSE			1

#define TME_HOVER			0x00000001
#define TME_LEAVE			0x00000002
#define TME_NONCLIENT			0x00000010
#define TME_QUERY			0x40000000
#define TME_CANCEL			0x80000000

#define TPM_LEFTBUTTON			(int32_t)(0x0000)
#define TPM_RIGHTBUTTON			(int32_t)(0x0002)
#define TPM_LEFTALIGN			(int32_t)(0x0000)
#define TPM_CENTERALIGN			(int32_t)(0x0004)
#define TPM_RIGHTALIGN			(int32_t)(0x0008)
#define TPM_TOPALIGN			(int32_t)(0x0000)
#define TPM_VCENTERALIGN		(int32_t)(0x0010)
#define TPM_BOTTOMALIGN			(int32_t)(0x0020)

#define TPM_HORIZONTAL			(int32_t)(0x0000)
#define TPM_VERTICAL			(int32_t)(0x0040)
#define TPM_NONOTIFY			(int32_t)(0x0080)
#define TPM_RETURNCMD			(int32_t)(0x0100)
#define TPM_RECURSE			(int32_t)(0x0001)
#define TPM_HORPOSANIMATION		(int32_t)(0x0400)
#define TPM_HORNEGANIMATION		(int32_t)(0x0800)
#define TPM_VERPOSANIMATION		(int32_t)(0x1000)
#define TPM_VERNEGANIMATION		(int32_t)(0x2000)
#define TPM_NOANIMATION			(int32_t)(0x4000)
#define TPM_LAYOUTRTL			(int32_t)(0x8000)
#define TPM_WORKAREA			(int32_t)(0x10000)

#define GCLP_HCURSOR 			(-12)
#define GCLP_HICONSM			(-34)

#define GWLP_WNDPROC			(-4)
#define GWLP_HINSTANCE			(-6)
#define GWLP_HWNDPARENT			(-8)
#define GWLP_USERDATA			(-21)
#define GWLP_ID				(-12)

#define HBMMENU_CALLBACK		((HBITMAP)(-1))
#define HBMMENU_SYSTEM			((HBITMAP)1)
#define HBMMENU_MBAR_RESTORE		((HBITMAP)2)
#define HBMMENU_MBAR_MINIMIZE		((HBITMAP)3)
#define HBMMENU_MBAR_CLOSE		((HBITMAP)5)
#define HBMMENU_MBAR_CLOSE_D		((HBITMAP)6)
#define HBMMENU_MBAR_MINIMIZE_D		((HBITMAP)7)
#define HBMMENU_POPUP_CLOSE		((HBITMAP)8)
#define HBMMENU_POPUP_RESTORE		((HBITMAP)9)
#define HBMMENU_POPUP_MAXIMIZE		((HBITMAP)10)
#define HBMMENU_POPUP_MINIMIZE		((HBITMAP)11)

#define IDYES				6
#define IDNO				7

#define IDC_ARROW			MAKEINTRESOURCE(32512)
#define IDC_IBEAM			MAKEINTRESOURCE(32513)
#define IDC_WAIT			MAKEINTRESOURCE(32514)
#define IDC_CROSS			MAKEINTRESOURCE(32515)
#define IDC_UPARROW			MAKEINTRESOURCE(32516)
#define IDC_SIZE			MAKEINTRESOURCE(32640)
#define IDC_ICON			MAKEINTRESOURCE(32641)
#define IDC_SIZENWSE			MAKEINTRESOURCE(32642)
#define IDC_SIZENESW			MAKEINTRESOURCE(32643)
#define IDC_SIZEWE			MAKEINTRESOURCE(32644)
#define IDC_SIZENS			MAKEINTRESOURCE(32645)
#define IDC_SIZEALL			MAKEINTRESOURCE(32646)
#define IDC_NO				MAKEINTRESOURCE(32648)
#define IDC_HAND			MAKEINTRESOURCE(32649)
#define IDC_APPSTARTING			MAKEINTRESOURCE(32650)
#define IDC_HELP			MAKEINTRESOURCE(32651)

#define IMAGE_ICON			1

#define MFS_ENABLED			(0)
#define MFS_UNHILITE			(0)
#define MFS_UNCHECKED			(0)
#define MFS_DISABLED			(3)
#define MFS_GRAYED			(3)
#define MFS_CHECKED			(8)
#define MFS_HILITE			(128)
#define MFS_DEFAULT			(4096)

#define SWP_NOSIZE 			0x0001
#define SWP_NOACTIVATE 			0x0010
#define SWP_NOZORDER 			0x0004
#define SWP_NOMOVE 			0x0002
#define SWP_FRAMECHANGED 		0x0020
#define SWP_NOOWNERZORDER 		0x0200
#define SWP_NOCOPYBITS 			0x0100
#define SWP_NOOWNERZORDER 		0x0200
#define SWP_NOREPOSITION 		SWP_NOOWNERZORDER

#define WS_CLIPSIBLINGS			(int32_t)(0x04000000)
#define WS_CLIPCHILDREN			(int32_t)(0x02000000)
#define WS_POPUP 			(0x80000000)
#define WS_TABSTOP 			(0x00010000)
#define WS_VISIBLE 			(0x10000000)
#define WS_CHILD 			(int32_t)(0x40000000)
#define WS_VSCROLL 			(int32_t)(0x00200000)
#define WS_HSCROLL			(int32_t)(0x00100000)
#define WS_THICKFRAME 			(int32_t)(0x00040000)
#define WS_SIZEBOX			WS_THICKFRAME
#define WS_CAPTION 			(0x00C00000)
#define WS_BORDER 			(int32_t)(0x00800000)
#define WS_MAXIMIZEBOX 			(int32_t)(0x00010000)
#define WS_SYSMENU 			(0x00080000)
#define WS_MINIMIZEBOX 			(int32_t)(0x00020000)
#define WS_OVERLAPPED 			(int32_t)(0x00000000)
#define WS_OVERLAPPEDWINDOW 		(WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX)
#define WS_GROUP 			(int32_t)(0x00020000)

#define WS_EX_TOPMOST                   (int32_t)(0x00000008)
#define WS_EX_CLIENTEDGE                (int32_t)(0x00000200)
#define WS_EX_TOOLWINDOW                (int32_t)(0x00000080)
#define WS_EX_LEFTSCROLLBAR             (int32_t)(0x00004000)
#define WS_EX_APPWINDOW			(int32_t)(0x00040000)
#define WS_EX_LAYERED                   0x00080000

#define ES_AUTOHSCROLL 			(0x0080)

#define CS_VREDRAW			0x0001
#define CS_HREDRAW			0x0002
#define CS_DBLCLKS			0x0008
#define CS_OWNDC			0x0020
#define CS_CLASSDC			0x0040
#define CS_PARENTDC			0x0080
#define CS_NOCLOSE			0x0200
#define CS_SAVEBITS			0x0800
#define CS_BYTEALIGNCLIENT		0x1000
#define CS_BYTEALIGNWINDOW		0x2000
#define CS_GLOBALCLASS			0x4000
#define CS_IME				0x00010000

#define GWL_STYLE 			(-16)
#define GWL_EXSTYLE 			(-20)

#define PM_NOREMOVE			0x0000
#define PM_REMOVE			0x0001
#define PM_NOYIELD			0x0002

#define CW_USEDEFAULT 			((int)0x80000000)

#define STARTF_USESHOWWINDOW 		0x00000001

#define HTCLIENT			1

#define HC_ACTION			0
#define HC_GETNEXT			1
#define HC_SKIP				2
#define HC_NOREMOVE			3
#define HC_NOREM			HC_NOREMOVE
#define HC_SYSMODALON			4
#define HC_SYSMODALOFF			5

#define HCBT_MOVESIZE			0
#define HCBT_MINMAX			1
#define HCBT_QS				2
#define HCBT_CREATEWND			3
#define HCBT_DESTROYWND			4
#define HCBT_ACTIVATE			5
#define HCBT_CLICKSKIPPED		6
#define HCBT_KEYSKIPPED			7
#define HCBT_SYSCOMMAND			8
#define HCBT_SETFOCUS			9

#define HWND_DESKTOP			((HWND)0)
#define HWND_TOP 			((HWND)0)
#define HWND_BOTTOM 			((HWND)1)
#define HWND_NOTOPMOST			((HWND)-2)
#define HWND_TOPMOST			((HWND)-1)

#define BDR_SUNKENOUTER 		0x0002
#define BDR_RAISEDINNER 		0x0004

#define EDGE_ETCHED 			(BDR_SUNKENOUTER | BDR_RAISEDINNER)

#define IDCANCEL 			2

#define DM_SETDEFID 			(WM_USER+1)

#define HTTRANSPARENT 			(-1)

#define LWA_ALPHA 			0x00000002

#define MONITORINFOF_PRIMARY 		0x00000001

#define ODA_DRAWENTIRE			0x0001
#define ODA_SELECT			0x0002
#define ODA_FOCUS			0x0004

#define ODS_SELECTED			0x0001
#define ODS_GRAYED			0x0002
#define ODS_DISABLED			0x0004
#define ODS_CHECKED			0x0008
#define ODS_FOCUS			0x0010
#define ODS_DEFAULT			0x0020
#define ODS_COMBOBOXEDIT		0x1000
#define ODS_HOTLIGHT			0x0040
#define ODS_INACTIVE			0x0080
#define ODS_NOACCEL			0x0100
#define ODS_NOFOCUSRECT			0x0200

#define DLGWINDOWEXTRA			30

#define ICON_SMALL			0
#define ICON_SMALL2			2
#define ICON_BIG 			1

#define SIZE_MINIMIZED			1
#define SIZE_MAXIMIZED 			2
#define SIZE_RESTORED 			0

#define RDW_FRAME 			0x0400
#define RDW_INVALIDATE 			0x0001
#define RDW_UPDATENOW 			0x0100
#define RDW_ALLCHILDREN 		0x0080

#define IDOK 				1

#define FLASHW_CAPTION			0x00000001
#define FLASHW_TRAY 			0x00000002
#define FLASHW_TIMER 			0x00000004
#define FLASHW_STOP 			0

#define MAKELPARAM(l,h) 		((LPARAM)(DWORD)MAKELONG(l,h))
#define MAKEWPARAM(l,h)			((WPARAM)(DWORD)MAKELONG(l,h))

#define XBUTTON1			0x0001
#define XBUTTON2			0x0002


struct  w32api_nmhdr;
struct  w32api_icon_info;
struct  w32api_monitor_info;
struct  w32api_flash_winfo;
struct  w32api_help_info;
struct  w32api_window_info;
struct  w32api_window_placement;
struct  w32api_msg;
struct  w32api_scroll_info;
struct  w32api_paint_struct;
struct  w32api_draw_item_struct;
struct	w32api_min_max_info;
struct	w32api_window_pos;
struct	w32api_style_struct;
struct	w32api_tpm_params;

struct  w32api_cbt_create_wnd_ansi;
struct  w32api_cbt_create_wnd_utf8;
struct  w32api_cbt_create_wnd_utf16;

struct  w32api_wnd_class_ansi;
struct  w32api_wnd_class_utf8;
struct  w32api_wnd_class_utf16;

struct  w32api_wnd_class_ex_ansi;
struct  w32api_wnd_class_ex_utf8;
struct  w32api_wnd_class_ex_utf16;

struct  w32api_non_client_metrics_ansi;
struct  w32api_non_client_metrics_utf8;
struct  w32api_non_client_metrics_utf16;

struct  w32api_menu_item_info_ansi;
struct  w32api_menu_item_info_utf8;
struct  w32api_menu_item_info_utf16;

struct  w32api_create_struct_ansi;
struct  w32api_create_struct_utf8;
struct  w32api_create_struct_utf16;

struct  w32api_msgboxparams_asni;
struct  w32api_msgboxparams_utf8;
struct  w32api_msgboxparams_utf16;

struct	w32api_track_mouse_event;

struct winuser_kb_dll_hook_struct;


typedef struct w32api_nmhdr NMHDR,*LPNMHDR;
typedef struct w32api_icon_info	ICONINFO,*PICONINFO,*LPICONINFO;
typedef struct w32api_monitor_info MONITORINFO, *LPMONITORINFO;
typedef struct w32api_flash_winfo FLASHWINFO,*PFLASHWINFO;
typedef struct w32api_help_info HELPINFO,*LPHELPINFO;
typedef struct w32api_window_info WINDOWINFO,*PWINDOWINFO,*LPWINDOWINFO;
typedef struct w32api_window_placement WINDOWPLACEMENT, *PWINDOWPLACEMENT, *LPWINDOWPLACEMENT;
typedef struct w32api_msg MSG, *PMSG, *LPMSG;
typedef struct w32api_scroll_info SCROLLINFO,*LPSCROLLINFO,*LPCSCROLLINFO;
typedef struct w32api_paint_struct PAINTSTRUCT,*PPAINTSTRUCT,*NPPAINTSTRUCT,*LPPAINTSTRUCT;
typedef struct w32api_draw_item_struct DRAWITEMSTRUCT,*PDRAWITEMSTRUCT,*LPDRAWITEMSTRUCT;
typedef struct w32api_track_mouse_event TRACKMOUSEEVENT,*LPTRACKMOUSEEVENT;
typedef struct w32api_min_max_info MINMAXINFO,*PMINMAXINFO,*LPMINMAXINFO;
typedef struct w32api_window_pos WINDOWPOS,*LPWINDOWPOS,*PWINDOWPOS;
typedef struct w32api_style_struct STYLESTRUCT,*LPSTYLESTRUCT;
typedef struct w32api_tpm_params TPMPARAMS,*LPTPMPARAMS;

typedef struct winuser_kd_dll_hook_struct KBDLLHOOKSTRUCT,*LPKBDLLHOOKSTRUCT,*PKBDLLHOOKSTRUCT;

typedef struct w32api_wnd_class_ansi WNDCLASSA, *PWNDCLASSA, *NPWNDCLASSA, *LPWNDCLASSA;
typedef struct w32api_wnd_class_utf8 WNDCLASSM, *PWNDCLASSM, *NPWNDCLASSM, *LPWNDCLASSM;
typedef struct w32api_wnd_class_utf16 WNDCLASSW, *PWNDCLASSW, *NPWNDCLASSW, *LPWNDCLASSW;

typedef struct w32api_wnd_class_ex_ansi WNDCLASSEXA, *PWNDCLASSEXA, *NPWNDCLASSEXA, *LPWNDCLASSEXA;
typedef struct w32api_wnd_class_ex_utf8 WNDCLASSEXM, *PWNDCLASSEXM, *NPWNDCLASSEXM, *LPWNDCLASSEXM;
typedef struct w32api_wnd_class_ex_utf16 WNDCLASSEXW, *PWNDCLASSEXW, *NPWNDCLASSEXW, *LPWNDCLASSEXW;

typedef struct w32api_non_client_metrics_ansi NONCLIENTMETRICSA, *PNONCLIENTMETRICSA, *LPNONCLIENTMETRICSA;
typedef struct w32api_non_client_metrics_utf8 NONCLIENTMETRICSM, *PNONCLIENTMETRICSM, *LPNONCLIENTMETRICSM;
typedef struct w32api_non_client_metrics_utf16 NONCLIENTMETRICSW, *PNONCLIENTMETRICSW, *LPNONCLIENTMETRICSW;

typedef struct w32api_msgboxparams_ansi MSGBOXPARAMSA, *PMSGBOXPARAMSA, *LPMSGBOXPARAMSA;
typedef struct w32api_msgboxparams_utf8 MSGBOXPARAMSM, *PMSGBOXPARAMSM, *LPMSGBOXPARAMSM;
typedef struct w32api_msgboxparams_utf16 MSGBOXPARAMSW, *PMSGBOXPARAMSW, *LPMSGBOXPARAMSW;

typedef struct w32api_create_struct_ansi CREATESTRUCTA,*LPCREATESTRUCTA;
typedef struct w32api_create_struct_utf8 CREATESTRUCTM,*LPCREATESTRUCTM;
typedef struct w32api_create_struct_utf16 CREATESTRUCTW,*LPCREATESTRUCTW;

typedef struct w32api_menu_item_info_ansi MENUITEMINFOA,*LPMENUITEMINFOA,*LPCMENUITEMINFOA;
typedef struct w32api_menu_item_info_utf8 MENUITEMINFOM,*LPMENUITEMINFOM,*LPCMENUITEMINFOM;
typedef struct w32api_menu_item_info_utf16 MENUITEMINFOW,*LPMENUITEMINFOW,*LPCMENUITEMINFOW;

typedef struct w32api_cbt_create_wnd_ansi CBT_CREATEWNDA,*LPCBT_CREATEWNDA;
typedef struct w32api_cbt_create_wnd_utf8 CBT_CREATEWNDM,*LPCBT_CREATEWNDM;
typedef struct w32api_cbt_create_wnd_utf16 CBT_CREATEWNDW,*LPCBT_CREATEWNDW;

/* clean me up later? */
typedef LRESULT (__stdcall *HOOKPROC)(int,WPARAM,LPARAM);

typedef int (__stdcall *WNDENUMPROC) (HWND, LPARAM);
typedef int (__stdcall *MONITORENUMPROC) (HMONITOR, HDC, LPRECT, LPARAM);

typedef void (__stdcall *MSGBOXCALLBACK)(LPHELPINFO lpHelpInfo);
typedef void (__stdcall *TIMERPROC) (HWND, UINT, UINT_PTR, DWORD);
typedef INT_PTR (__stdcall *DLGPROC) (HWND, UINT, WPARAM, LPARAM);
/*  */

struct w32api_nmhdr {
	HWND hwndFrom;
	UINT_PTR idFrom;
	UINT code;
};

struct w32api_icon_info {
	BOOL		fIcon;
	DWORD		xHotspot;
	DWORD		yHotspot;
	HBITMAP		hbmMask;
	HBITMAP		hbmColor;
};

struct w32api_monitor_info {
	DWORD	cbSize;
	RECT	rcMonitor;
	RECT	rcWork;
	DWORD	dwFlags;
};

struct w32api_flash_winfo {
    UINT cbSize;
    HWND hwnd;
    DWORD dwFlags;
    UINT uCount;
    DWORD dwTimeout;
};

struct w32api_help_info {
    UINT cbSize;
    int iContextType;
    int iCtrlId;
    HANDLE hItemHandle;
    DWORD_PTR dwContextId;
    POINT MousePos;
};

struct w32api_window_info {
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
};

struct w32api_window_placement {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
};

struct w32api_msg {
  HWND   hwnd;
  UINT   message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD  time;
  POINT  pt;
};

struct w32api_scroll_info {
    UINT cbSize;
    UINT fMask;
    int nMin;
    int nMax;
    UINT nPage;
    int nPos;
    int nTrackPos;
};

struct w32api_paint_struct {
    HDC hdc;
    int fErase;
    RECT rcPaint;
    int fRestore;
    int fIncUpdate;
    BYTE rgbReserved[32];
};

struct w32api_draw_item_struct {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemAction;
    UINT itemState;
    HWND hwndItem;
    HDC hDC;
    RECT rcItem;
    ULONG_PTR itemData;
};

struct w32api_track_mouse_event {
	DWORD cbSize;
	DWORD dwFlags;
	HWND hwndTrack;
	DWORD dwHoverTime;
};

struct w32api_min_max_info {
	POINT ptReserved;
	POINT ptMaxSize;
	POINT ptMaxPosition;
	POINT ptMinTrackSize;
	POINT ptMaxTrackSize;
};

struct w32api_window_pos {
	HWND hwnd;
	HWND hwndInsertAfter;
	int x;
	int y;
	int cx;
	int cy;
	UINT flags;
};

struct w32api_style_struct {
       DWORD styleOld;
       DWORD styleNew;
};

struct w32api_tpm_params {
	UINT cbSize;
	RECT rcExclude;
};

struct winuser_kd_dll_hook_struct {
	DWORD vkCode;
	DWORD scanCode;
	DWORD flags;
	DWORD time;
	ULONG_PTR dwExtraInfo;
};

//ansi-utf8-utf16 structs
struct  w32api_cbt_create_wnd_ansi {
	LPCREATESTRUCTA lpcs;
	HWND hwndInsertAfter;
};

struct  w32api_cbt_create_wnd_utf8 {
	LPCREATESTRUCTM lpcs;
	HWND hwndInsertAfter;
};

struct  w32api_cbt_create_wnd_utf16 {
	LPCREATESTRUCTW lpcs;
	HWND hwndInsertAfter;
};

struct w32api_msgboxparams_ansi {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

struct w32api_msgboxparams_utf8 {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

struct w32api_msgboxparams_utf16 {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpszText;
    LPCWSTR lpszCaption;
    DWORD dwStyle;
    LPCWSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

struct w32api_create_struct_ansi {
	LPVOID lpCreateParams;
	HINSTANCE hInstance;
	HMENU hMenu;
	HWND hwndParent;
	int cy;
	int cx;
	int y;
	int x;
	LONG style;
	LPCSTR lpszName;
	LPCSTR lpszClass;
	DWORD dwExStyle;
};

struct w32api_create_struct_utf8 {
	LPVOID lpCreateParams;
	HINSTANCE hInstance;
	HMENU hMenu;
	HWND hwndParent;
	int cy;
	int cx;
	int y;
	int x;
	LONG style;
	LPCSTR lpszName;
	LPCSTR lpszClass;
	DWORD dwExStyle;
};

struct w32api_create_struct_utf16 {
	LPVOID lpCreateParams;
	HINSTANCE hInstance;
	HMENU hMenu;
	HWND hwndParent;
	int cy;
	int cx;
	int y;
	int x;
	LONG style;
	LPCWSTR lpszName;
	LPCWSTR lpszClass;
	DWORD dwExStyle;
};

struct w32api_menu_item_info_ansi {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	ULONG_PTR dwItemData;
	LPSTR dwTypeData;
	UINT cch;
	HBITMAP hbmpItem;
};

struct w32api_menu_item_info_utf8 {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	ULONG_PTR dwItemData;
	LPSTR dwTypeData;
	UINT cch;
	HBITMAP hbmpItem;
};

struct w32api_menu_item_info_utf16 {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	ULONG_PTR dwItemData;
	LPWSTR dwTypeData;
	UINT cch;
	HBITMAP hbmpItem;
};

struct w32api_wnd_class_ansi {
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCSTR lpszMenuName;
	LPCSTR lpszClassName;
};

struct w32api_wnd_class_utf8 {
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCSTR lpszMenuName;
	LPCSTR lpszClassName;
};

struct w32api_wnd_class_utf16 {
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCWSTR lpszMenuName;
	LPCWSTR lpszClassName;
};

struct w32api_wnd_class_ex_ansi {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
};

struct w32api_wnd_class_ex_utf8 {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
};

struct w32api_wnd_class_ex_utf16 {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
    HICON hIconSm;
};

struct w32api_non_client_metrics_ansi {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTA lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;
#if WINVER >= 0x0600
    int iPaddedBorderWidth;
#endif
};

struct w32api_non_client_metrics_utf8 {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTM lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTM lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTM lfMenuFont;
    LOGFONTM lfStatusFont;
    LOGFONTM lfMessageFont;
#if WINVER >= 0x0600
    int iPaddedBorderWidth;
#endif
};

struct w32api_non_client_metrics_utf16 {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTW lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;
#if WINVER >= 0x0600
    int iPaddedBorderWidth;
#endif
};

#ifdef WINAPI_ANSI_DEFAULT
typedef struct w32api_create_struct_ansi		CREATESTRUCT,*LPCREATESTRUCT;
typedef struct w32api_wnd_class_ansi			WNDCLASS;
typedef struct w32api_wnd_class_ex_ansi			WNDCLASSEX;
typedef struct w32api_non_client_metrics_ansi		NONCLIENTMETRICS;
typedef struct w32api_msgboxparams_asni			MSGBOXPARAMS;
typedef struct w32api_cbt_create_wnd_ansi		CBT_CREATEWND;
typedef struct w32api_menu_item_info_ansi		MENUITEMINFO;
#endif

#ifdef WINAPI_UTF8_DEFAULT
typedef struct w32api_create_struct_utf8		CREATESTRUCT,*LPCREATESTRUCT;
typedef struct w32api_wnd_class_utf8			WNDCLASS;
typedef struct w32api_wnd_class_ex_utf8                 WNDCLASSEX;
typedef struct w32api_non_client_metrics_utf8		NONCLIENTMETRICS;
typedef struct w32api_msgboxparams_utf8			MSGBOXPARAMS;
typedef struct w32api_cbt_create_wnd_utf8               CBT_CREATEWND;
typedef struct w32api_menu_item_info_utf8               MENUITEMINFO;
#endif

#ifdef WINAPI_UTF16_DEFAULT
typedef struct w32api_create_struct_utf16		CREATESTRUCT,*LPCREATESTRUCT;
typedef struct w32api_wnd_class_utf16			WNDCLASS;
typedef struct w32api_wnd_class_ex_utf16		WNDCLASSEX;
typedef struct w32api_non_client_metrics_utf16		NONCLIENTMETRICS;
typedef struct w32api_msgboxparams_utf16		MSGBOXPARAMS;
typedef struct w32api_cbt_create_wnd_utf16		CBT_CREATEWND;
typedef struct w32api_menu_item_info_utf16		MENUITEMINFO;
#endif


__dllimport int __stdcall SetDlgItemInt(HWND hDlg, int nIDDlgItem, UINT uValue, int bSigned);
__dllimport UINT __stdcall GetDlgItemInt(HWND hDlg, int nIDDlgItem, int *lpTranslated, int bSigned);
__dllimport int __stdcall TrackPopupMenuEx(HMENU hMenu, UINT uFlags, int X, int Y, HWND hWnd, LPTPMPARAMS lptpm);
__dllimport int __stdcall ChangeClipboardChain(HWND hWndRemove, HWND hWndNewNext);
__dllimport HMENU __stdcall GetSubMenu(HMENU hMenu, int nPos);
__dllimport HWND __stdcall GetTopWindow(HWND hWnd);
__dllimport HWND __stdcall GetWindow(HWND hWnd, UINT uCmd);
__dllimport int __stdcall MoveWindow(HWND hWnd, int X, int Y, int nWidth, int nHeight, int bRepaint);
__dllimport HDWP __stdcall BeginDeferWindowPos (int nNumWindows);
__dllimport int __stdcall EndDeferWindowPos (HDWP hWinPosInfo);
__dllimport HDWP __stdcall DeferWindowPos (HDWP hWinPosInfo, HWND hWnd, HWND hWndInsertAfter, int x, int y, int cx, int cy, UINT uFlags);
__dllimport DWORD __stdcall GetWindowThreadProcessId(HWND hWnd, LPDWORD lpdwProcessId);
__dllimport int __stdcall IsWindow(HWND hWnd);
__dllimport int __stdcall IsWindowVisible(HWND hWnd);
__dllimport int __stdcall IsWindowUnicode(HWND hWnd);
__dllimport int __stdcall IsWindowEnabled(HWND hWnd);
__dllimport int __stdcall AdjustWindowRectEx(LPRECT lpRect, DWORD dwStyle, int bMenu, DWORD dwExStyle);
__dllimport int __stdcall ScrollWindowEx(HWND hWnd, int dx, int dy, const RECT *prcScroll, const RECT *prcClip, HRGN hrgnUpdate, LPRECT prcUpdate, UINT flags);
__dllimport int __stdcall TrackMouseEvent(LPTRACKMOUSEEVENT lpEventTrack);
__dllimport int __stdcall EqualRect(const RECT *lprc1, const RECT *lprc2);
__dllimport int __stdcall IntersectRect(LPRECT lprcDst, const RECT *lprcSrc1, const RECT *lprcSrc2);
__dllimport int __stdcall SetRect(LPRECT lprc, int xLeft, int yTop, int xRight, int yBottom);
__dllimport int __stdcall CopyRect(LPRECT lprcDest, const RECT *lprcSrc);
__dllimport int __stdcall OffsetRect(LPRECT lprc, int dx, int dy);
__dllimport int __stdcall PtInRect(const RECT *lprc, POINT pt);
__dllimport int __stdcall SetCursorPos(int x, int y);
__dllimport HICON __stdcall CreateIconIndirect(PICONINFO piconinfo);
__dllimport int __stdcall MapWindowPoints(HWND hWndFrom, HWND hWndTo, LPPOINT lpPoints, UINT cPoints);
__dllimport HWND __stdcall GetDesktopWindow(void);
__dllimport HWND __stdcall GetActiveWindow(void);
__dllimport HWND __stdcall GetForegroundWindow(void);
__dllimport int __stdcall EnableWindow(HWND hwnd,BOOL enabled);
__dllimport int __stdcall UpdateWindow(HWND hwnd);
__dllimport int __stdcall GetClassNameA(HWND,LPSTR,int);
__dllimport int __stdcall GetClassNameW(HWND,LPWSTR,int);
__dllimport int __stdcall SetScrollInfo(HWND hwnd,int nBar,LPCSCROLLINFO lpsi,int redraw);
__dllimport int __stdcall GetScrollInfo(HWND hwnd,int nBar,LPSCROLLINFO lpsi);
__dllimport int __stdcall ShowWindow(HWND hwnd, int nCmdShow);
__dllimport int __stdcall ClientToScreen(HWND hwnd, LPPOINT lpPoint);
__dllimport int __stdcall GetWindowRect(HWND hwnd, LPRECT lpRect);
__dllimport HWND __stdcall SetActiveWindow(HWND hWnd);
__dllimport int __stdcall SetWindowRgn(HWND hWnd, HRGN hRgn, int bRedraw);
__dllimport int __stdcall SetWindowPos(HWND hwnd, HWND hwnInsertAfter, int X, int Y, int cx, int cy, UINT uFlags);
__dllimport int __stdcall GetClientRect(HWND hwnd, LPRECT lpRect);
__dllimport int __stdcall SetFocus(HWND hwnd);
__dllimport int __stdcall CreateCaret(HWND hwnd, HBITMAP hBitmap, int nWidth, int nHeight);
__dllimport HWND __stdcall GetDlgItem(HWND hDlg, int nIDDlgItem);
__dllimport int __stdcall MapDialogRect(HWND hDlg, LPRECT lpRect);
__dllimport int __stdcall DrawEdge(HDC hdc, LPRECT qrc, UINT edge, UINT grfFlags);
__dllimport HDC __stdcall BeginPaint(HWND hwnd, LPPAINTSTRUCT lpPaint);
__dllimport int __stdcall EndPaint(HWND hwnd, const PAINTSTRUCT *lpPaint);
__dllimport int __stdcall DestroyWindow(HWND hwnd);
__dllimport unsigned long __stdcall GetSysColor(int nIndex);
__dllimport int __stdcall TranslateMessage(const MSG *lpMsg);
__dllimport void __stdcall PostQuitMessage(int exitCode);
__dllimport short __stdcall GetAsyncKeyState(int vKey);
__dllimport short __stdcall GetKeyState(int nVirtKey);
__dllimport int __stdcall InvalidateRect(HWND hWnd, const RECT *lpRect, int bErase);
__dllimport int __stdcall CheckRadioButton(HWND hDlg, int nIDFirstButton, int nIDLastButton, int nIDCheckButton);
__dllimport int __stdcall SetCaretPos(int X, int Y);
__dllimport int __stdcall GetCaretPos(LPPOINT lpPoint);
__dllimport HMONITOR __stdcall MonitorFromPoint(POINT pt, DWORD dwFlags);
__dllimport int __stdcall ToUnicode(UINT wVirtKey, UINT wScanCode, const BYTE *lpKeyState, LPWSTR pwszBuff, int cchBuff, UINT wFlags);
__dllimport int __stdcall GetKeyboardState(PBYTE lpKeyState);
__dllimport int __stdcall ScreenToClient(HWND hWnd, LPPOINT lpPoint);
__dllimport int __stdcall ReleaseCapture(void);
__dllimport UINT __stdcall GetDoubleClickTime(void);
__dllimport long __stdcall GetMessageTime(void);
__dllimport HWND __stdcall WindowFromPoint(POINT Point);
__dllimport int __stdcall ShowCursor(int bShow);
__dllimport HCURSOR __stdcall CreateCursor(HINSTANCE hInst, int xHotSpot, int yHotSpot, int nWidth, int nHeight, const void *pvANDPlane, const void *pvXORPlane);
__dllimport int __stdcall DestroyCursor(HCURSOR hCursor);
__dllimport HCURSOR __stdcall SetCursor(HCURSOR hCursor);
__dllimport int __stdcall GetCursorPos(LPPOINT lpPoint);
__dllimport UINT_PTR __stdcall SetTimer(HWND hWnd, UINT_PTR nIDEvent, UINT uElapse, TIMERPROC lpTimerFunc);
__dllimport int __stdcall CloseClipboard(void);
__dllimport int __stdcall EmptyClipboard(void);
__dllimport HWND __stdcall GetOpenClipboardWindow(void);
__dllimport int __stdcall OpenClipboard(HWND hWndNewOwner);
__dllimport HANDLE __stdcall SetClipboardData(UINT uFormat, HANDLE hMem);
__dllimport HWND __stdcall GetParent(HWND hWnd);
__dllimport int __stdcall EnableMenuItem(HMENU hMenu, UINT uIDEnableItem, UINT uEnable);
__dllimport int __stdcall IsClipboardFormatAvailable(UINT format);
__dllimport int __stdcall IsZoomed(HWND hWnd);
__dllimport HMENU __stdcall CreatePopupMenu(void);
__dllimport HDC __stdcall GetDC(HWND hWnd);
__dllimport int __stdcall ReleaseDC(HWND hWnd, HDC hDC);
__dllimport HANDLE __stdcall GetClipboardData(UINT uFormat);
__dllimport HWND __stdcall GetClipboardOwner(void);
__dllimport HWND __stdcall GetClipboardViewer(void);
__dllimport HWND __stdcall SetClipboardViewer(HWND hwnd);
__dllimport int __stdcall GetWindowPlacement(HWND hWnd, WINDOWPLACEMENT *lpwndpl);
__dllimport int __stdcall IsIconic(HWND hWnd);
__dllimport int __stdcall GetWindowInfo(HWND hWnd, PWINDOWINFO pwi);
__dllimport UINT __stdcall IsDlgButtonChecked(HWND hDlg, int nIDButton);
__dllimport HWND __stdcall SetCapture(HWND hWnd);
__dllimport HMENU __stdcall GetSystemMenu(HWND hWnd, int bRevert);
__dllimport int __stdcall TrackPopupMenu(HMENU hMenu, UINT uFlags, int x, int y, int nReserved, HWND hWn, const RECT *prcRect);
__dllimport int __stdcall KillTimer(HWND hWnd, UINT_PTR uIDEvent);
__dllimport int __stdcall DestroyCaret(void);
__dllimport int __stdcall ShowCaret(HWND hWnd);
__dllimport int __stdcall RedrawWindow(HWND hWnd, const RECT *lprcUpdate, HRGN hrgnUpdate, UINT flags);
__dllimport int __stdcall MessageBeep(UINT uType);
__dllimport int __stdcall EnumThreadWindows(DWORD dwThreadId, WNDENUMPROC lpfn, LPARAM lParam);
__dllimport int __stdcall EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);
__dllimport int __stdcall BringWindowToTop(HWND hWnd);
__dllimport HMONITOR __stdcall MonitorFromWindow(HWND hWnd, DWORD dwFlags);
__dllimport int __stdcall EnumDisplayMonitors(HDC hdc, LPCRECT lprcClip, MONITORENUMPROC lpfnEnum, LPARAM dwData);
__dllimport int __stdcall AdjustWindowRect(LPRECT lpRect, DWORD dwStyle, int bMenu);
__dllimport int __stdcall FlashWindowEx(PFLASHWINFO pfwi);
__dllimport int __stdcall GetSystemMetrics(int nIndex);
__dllimport UINT __stdcall GetCaretBlinkTime(void);
__dllimport int __stdcall SetLayeredWindowAttributes (HWND hwnd, COLORREF crKey, BYTE bAlpha, DWORD dwFlags);
__dllimport HKL __stdcall GetKeyboardLayout(DWORD idThread);
__dllimport BOOL __stdcall UnhookWindowsHookEx(HHOOK hhk);
__dllimport LRESULT __stdcall CallNextHookEx(HHOOK hhk, int nCode, WPARAM wParam, LPARAM lParam);
__dllimport int __stdcall DestroyIcon(HICON hIcon);
__dllimport BOOL __stdcall GetIconInfo(HICON hIcon, PICONINFO piconinfo);
__dllimport int __stdcall RemoveMenu(HMENU hMenu, UINT uPosition, UINT uFlags);
__dllimport BOOL __stdcall DestroyMenu(HMENU hMenu);
__dllimport BOOL __stdcall SetForegroundWindow(HWND hWnd);
__dllimport HMONITOR __stdcall MonitorFromRect(LPCRECT lprc,DWORD dwFlags);
__dllimport int __stdcall GetKeyboardType(int nTypeFlag);


__dllimport int __stdcall DrawTextA(HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format);
__dllimport int __stdcall DrawTextM(HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format);
__dllimport int __stdcall DrawTextW(HDC hdc, LPCWSTR lpchText, int cchText, LPRECT lprc, UINT format);
__dllimport HMENU __stdcall LoadMenuA(HINSTANCE hInstance, LPCSTR lpMenuName);
__dllimport HMENU __stdcall LoadMenuM(HINSTANCE hInstance, LPCSTR lpMenuName);
__dllimport HMENU __stdcall LoadMenuW(HINSTANCE hInstance, LPCWSTR lpMenuName);
__dllimport UINT __stdcall RegisterWindowMessageA(LPCSTR lpString);
__dllimport UINT __stdcall RegisterWindowMessageM(LPCSTR lpString);
__dllimport UINT __stdcall RegisterWindowMessageW(LPCWSTR lpString);
__dllimport HANDLE __stdcall GetPropA(HWND hwnd, LPCSTR lpString);
__dllimport HANDLE __stdcall GetPropM(HWND hwnd, LPCSTR lpString);
__dllimport HANDLE __stdcall GetPropW(HWND hwnd, LPCWSTR lpString);
__dllimport HANDLE __stdcall RemovePropA(HWND hWnd, LPCSTR lpString);
__dllimport HANDLE __stdcall RemovePropM(HWND hWnd, LPCSTR lpString);
__dllimport HANDLE __stdcall RemovePropW(HWND hWnd, LPCWSTR lpString);
__dllimport int __stdcall SetPropA(HWND hWnd, LPCSTR lpString, HANDLE hData);
__dllimport int __stdcall SetPropM(HWND hWnd, LPCSTR lpString, HANDLE hData);
__dllimport int __stdcall SetPropW(HWND hWnd, LPCWSTR lpString, HANDLE hData);
__dllimport int __stdcall GetKeyboardLayoutNameA(LPSTR pwszKLID);
__dllimport int __stdcall GetKeyboardLayoutNameM(LPSTR pwszKLID);
__dllimport int __stdcall GetKeyboardLayoutNameW(LPWSTR pwszKLID);
__dllimport HKL __stdcall LoadKeyboardLayoutA(LPCSTR pwszKLID, UINT Flags);
__dllimport HKL __stdcall LoadKeyboardLayoutM(LPCSTR pwszKLID, UINT Flags);
__dllimport HKL __stdcall LoadKeyboardLayoutW(LPCWSTR pwszKLID, UINT Flags);
__dllimport LRESULT __stdcall DefWindowProcA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall DefWindowProcM(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall DefWindowProcW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendMessageA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendMessageM(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendMessageW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport int __stdcall GetMessageA(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax);
__dllimport int __stdcall GetMessageM(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax);
__dllimport int __stdcall GetMessageW(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax);
__dllimport HWND __stdcall CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassname, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam);
__dllimport HWND __stdcall CreateWindowExM(DWORD dwExStyle, LPCSTR lpClassname, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam);
__dllimport HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassname, LPCWSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam);
__dllimport int __stdcall GetWindowTextLengthA(HWND hWnd);
__dllimport int __stdcall GetWindowTextLengthM(HWND hWnd);
__dllimport int __stdcall GetWindowTextLengthW(HWND hWnd);
__dllimport int __stdcall GetWindowTextA(HWND hWnd, LPSTR lpString, int nMaxCount);
__dllimport int __stdcall GetWindowTextM(HWND hWnd, LPSTR lpString, int nMaxCount);
__dllimport int __stdcall GetWindowTextW(HWND hWnd, LPWSTR lpString, int nMaxCount);
__dllimport unsigned short __stdcall RegisterClassA(const WNDCLASSA *lpWndClass);
__dllimport unsigned short __stdcall RegisterClassM(const WNDCLASSM *lpWndClass);
__dllimport unsigned short __stdcall RegisterClassW(const WNDCLASSW *lpWndClass);
__dllimport int __stdcall SystemParametersInfoA(UINT uiAction, UINT uiParam, PVOID pvParam, UINT fWinIni);
__dllimport int __stdcall SystemParametersInfoM(UINT uiAction, UINT uiParam, PVOID pvParam, UINT fWinIni);
__dllimport int __stdcall SystemParametersInfoW(UINT uiAction, UINT uiParam, PVOID pvParam, UINT fWinIni);
__dllimport int __stdcall SetWindowTextA(HWND hWnd, LPCSTR lpString);
__dllimport int __stdcall SetWindowTextM(HWND hWnd, LPCSTR lpString);
__dllimport int __stdcall SetWindowTextW(HWND hWnd, LPCWSTR lpString);
__dllimport int __stdcall SetDlgItemTextA(HWND hDlg, int nIDDlgItem, LPCSTR lpString);
__dllimport int __stdcall SetDlgItemTextM(HWND hDlg, int nIDDlgItem, LPCSTR lpString);
__dllimport int __stdcall SetDlgItemTextW(HWND hDlg, int nIDDlgItem, LPCWSTR lpString);
__dllimport int __stdcall CheckDlgButton(HWND hDlg, int nIDButton, UINT uCheck);
__dllimport LRESULT __stdcall SendDlgItemMessageA(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendDlgItemMessageM(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendDlgItemMessageW(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall CallWindowProcA(WNDPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall CallWindowProcM(WNDPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall CallWindowProcW(WNDPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport int __stdcall MessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
__dllimport int __stdcall MessageBoxM(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
__dllimport int __stdcall MessageBoxW(HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType);
__dllimport LRESULT __stdcall DefDlgProcA(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall DefDlgProcM(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall DefDlgProcW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport int __stdcall MessageBoxIndirectA(const MSGBOXPARAMSA *lpmbp);
__dllimport int __stdcall MessageBoxIndirectM(const MSGBOXPARAMSM *lpmbp);
__dllimport int __stdcall MessageBoxIndirectW(const MSGBOXPARAMSW *lpmbp);
__dllimport UINT __stdcall MapVirtualKeyA(UINT uCode, UINT uMapType);
__dllimport UINT __stdcall MapVirtualKeyM(UINT uCode, UINT uMapType);
__dllimport UINT __stdcall MapVirtualKeyW(UINT uCode, UINT uMapType);
__dllimport UINT __stdcall MapVirtualKeyExA(UINT uCode, UINT uMapType, HKL dwhkl);
__dllimport UINT __stdcall MapVirtualKeyExM(UINT uCode, UINT uMapType, HKL dwhkl);
__dllimport UINT __stdcall MapVirtualKeyExW(UINT uCode, UINT uMapType, HKL dwhkl);
__dllimport HCURSOR __stdcall LoadCursorA(HINSTANCE hInstance, LPCSTR lpCursorName);
__dllimport HCURSOR __stdcall LoadCursorM(HINSTANCE hInstance, LPCSTR lpCursorName);
__dllimport HCURSOR __stdcall LoadCursorW(HINSTANCE hInstance, LPCWSTR lpCursorName);
__dllimport int __stdcall ModifyMenuA(HMENU hMnu, UINT uPosition, UINT uFlags, UINT_PTR uIDNewItem, LPCSTR lpNewItem);
__dllimport int __stdcall ModifyMenuM(HMENU hMnu, UINT uPosition, UINT uFlags, UINT_PTR uIDNewItem, LPCSTR lpNewItem);
__dllimport int __stdcall ModifyMenuW(HMENU hMnu, UINT uPosition, UINT uFlags, UINT_PTR uIDNewItem, LPCWSTR lpNewItem);
__dllimport HICON __stdcall LoadIconA(HINSTANCE hInstance, LPCSTR lpIconName);
__dllimport HICON __stdcall LoadIconM(HINSTANCE hInstance, LPCSTR lpIconName);
__dllimport HICON __stdcall LoadIconW(HINSTANCE hInstance, LPCWSTR lpIconName);
__dllimport int __stdcall AppendMenuA(HMENU hMenu, UINT uFlags, UINT_PTR uIDNewItem, LPCSTR lpNewItem);
__dllimport int __stdcall AppendMenuM(HMENU hMenu, UINT uFlags, UINT_PTR uIDNewItem, LPCSTR lpNewItem);
__dllimport int __stdcall AppendMenuW(HMENU hMenu, UINT uFlags, UINT_PTR uIDNewItem, LPCWSTR lpNewItem);
__dllimport int __stdcall InsertMenuA(HMENU hMenu, UINT uPosition, UINT uFlags, UINT_PTR uIDNEwItem, LPCSTR lpNewItem);
__dllimport int __stdcall InsertMenuM(HMENU hMenu, UINT uPosition, UINT uFlags, UINT_PTR uIDNEwItem, LPCSTR lpNewItem);
__dllimport int __stdcall InsertMenuW(HMENU hMenu, UINT uPosition, UINT uFlags, UINT_PTR uIDNEwItem, LPCWSTR lpNewItem);
__dllimport ULONG_PTR __stdcall SetClassLongPtrA(HWND hWnd, int nIndex, LONG_PTR dwNewLong);
__dllimport ULONG_PTR __stdcall SetClassLongPtrM(HWND hWnd, int nIndex, LONG_PTR dwNewLong);
__dllimport ULONG_PTR __stdcall SetClassLongPtrW(HWND hWnd, int nIndex, LONG_PTR dwNewLong);
__dllimport LRESULT __stdcall DispatchMessageA(const MSG *lpMsg);
__dllimport LRESULT __stdcall DispatchMessageM(const MSG *lpMsg);
__dllimport LRESULT __stdcall DispatchMessageW(const MSG *lpMsg);
__dllimport int __stdcall IsDialogMessageA(HWND hDlg, LPMSG lpMsg);
__dllimport int __stdcall IsDialogMessageM(HWND hDlg, LPMSG lpMsg);
__dllimport int __stdcall IsDialogMessageW(HWND hDlg, LPMSG lpMsg);
__dllimport HWND __stdcall CreateDialogParamA(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport HWND __stdcall CreateDialogParamM(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport HWND __stdcall CreateDialogParamW(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport INT_PTR __stdcall DialogBoxParamA(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport INT_PTR __stdcall DialogBoxParamM(HINSTANCE hInstance, LPCSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport INT_PTR __stdcall DialogBoxParamW(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam);
__dllimport LRESULT __stdcall SendDlgItemMessageA(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendDlgItemMessageM(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport LRESULT __stdcall SendDlgItemMessageW(HWND hDlg, int nIDDlgItem, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport int __stdcall PeekMessageA(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg);
__dllimport int __stdcall PeekMessageM(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg);
__dllimport int __stdcall PeekMessageW(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg);
__dllimport int __stdcall GetMonitorInfoA(HMONITOR hMonitor,LPMONITORINFO lpmi);
__dllimport int __stdcall GetMonitorInfoM(HMONITOR hMonitor,LPMONITORINFO lpmi);
__dllimport int __stdcall GetMonitorInfoW(HMONITOR hMonitor,LPMONITORINFO lpmi);
#if defined(__NT64)
__dllimport LONG_PTR __stdcall SetWindowLongPtrA(HWND, int nIndex, LONG_PTR dwNewLong);
__dllimport LONG_PTR __stdcall SetWindowLongPtrM(HWND, int nIndex, LONG_PTR dwNewLong);
__dllimport LONG_PTR __stdcall SetWindowLongPtrW(HWND, int nIndex, LONG_PTR dwNewLong);
__dllimport LONG_PTR __stdcall GetWindowLongPtrA(HWND hwnd, int nIndex);
__dllimport LONG_PTR __stdcall GetWindowLongPtrM(HWND hwnd, int nIndex);
__dllimport LONG_PTR __stdcall GetWindowLongPtrW(HWND hwnd, int nIndex);
#endif
__dllimport LONG __stdcall GetWindowLongA(HWND hWnd, int nIndex);
__dllimport LONG __stdcall GetWindowLongM(HWND hWnd, int nIndex);
__dllimport LONG __stdcall GetWindowLongW(HWND hWnd, int nIndex);
__dllimport LONG __stdcall SetWindowLongA(HWND hWnd, int nIndex, LONG dwNewLong);
__dllimport LONG __stdcall SetWindowLongM(HWND hWnd, int nIndex, LONG dwNewLong);
__dllimport LONG __stdcall SetWindowLongW(HWND hWnd, int nIndex, LONG dwNewLong);
__dllimport ATOM __stdcall RegisterClassExA(const WNDCLASSEXA *);
__dllimport ATOM __stdcall RegisterClassExM(const WNDCLASSEXM *);
__dllimport ATOM __stdcall RegisterClassExW(const WNDCLASSEXW *);
__dllimport UINT __stdcall RegisterClipboardFormatA(LPCSTR lpszFormat);
__dllimport UINT __stdcall RegisterClipboardFormatM(LPCSTR lpszFormat);
__dllimport UINT __stdcall RegisterClipboardFormatW(LPCWSTR lpszFormat);
__dllimport HHOOK __stdcall SetWindowsHookExA(int,HOOKPROC,HINSTANCE,DWORD);
__dllimport HHOOK __stdcall SetWindowsHookExM(int,HOOKPROC,HINSTANCE,DWORD);
__dllimport HHOOK __stdcall SetWindowsHookExW(int,HOOKPROC,HINSTANCE,DWORD);
__dllimport ULONG_PTR __stdcall GetClassLongPtrA(HWND hWnd, int nIndex);
__dllimport ULONG_PTR __stdcall GetClassLongPtrM(HWND hWnd, int nIndex);
__dllimport ULONG_PTR __stdcall GetClassLongPtrW(HWND hWnd, int nIndex);
__dllimport BOOL __stdcall SetMenuItemInfoA(HMENU hmenu, UINT item, BOOL fByPositon, LPCMENUITEMINFOA lpmii);
__dllimport BOOL __stdcall SetMenuItemInfoM(HMENU hmenu, UINT item, BOOL fByPositon, LPCMENUITEMINFOM lpmii);
__dllimport BOOL __stdcall SetMenuItemInfoW(HMENU hmenu, UINT item, BOOL fByPositon, LPCMENUITEMINFOW lpmii);
__dllimport BOOL __stdcall GetMenuItemInfoA(HMENU hmenu, UINT item, BOOL fByPosition, LPMENUITEMINFOA lpmii);
__dllimport BOOL __stdcall GetMenuItemInfoM(HMENU hmenu, UINT item, BOOL fByPosition, LPMENUITEMINFOM lpmii);
__dllimport BOOL __stdcall GetMenuItemInfoW(HMENU hmenu, UINT item, BOOL fByPosition, LPMENUITEMINFOW lpmii);
__dllimport BOOL __stdcall PostMessageA (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport BOOL __stdcall PostMessageM (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport BOOL __stdcall PostMessageW (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
__dllimport HANDLE __stdcall LoadImageA(HINSTANCE hInst, LPCSTR name, UINT type, int cx, int cy, UINT fuLoad);
__dllimport HANDLE __stdcall LoadImageM(HINSTANCE hInst, LPCSTR name, UINT type, int cx, int cy, UINT fuLoad);
__dllimport HANDLE __stdcall LoadImageW(HINSTANCE hInst, LPCWSTR name, UINT type, int cx, int cy, UINT fuLoad);
__dllimport HACCEL __stdcall LoadAcceleratorsA(HINSTANCE hInstance, LPCSTR lpTableName);
__dllimport HACCEL __stdcall LoadAcceleratorsM(HINSTANCE hInstance, LPCSTR lpTableName);
__dllimport HACCEL __stdcall LoadAcceleratorsW(HINSTANCE hInstance, LPCWSTR lpTableName);

#define MAKEINTRESOURCEA(i) ((LPSTR)((ULONG_PTR)((WORD)(i))))
#define MAKEINTRESOURCEM(i) ((LPSTR)((ULONG_PTR)((WORD)(i))))
#define MAKEINTRESOURCEW(i) ((LPWSTR)((ULONG_PTR)((WORD)(i))))

#define CreateDialogA(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamA(hInstance,lpName,hWndParent,lpDialogFunc,(LPARAM)0)
#define CreateDialogM(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamA(hInstance,lpName,hWndParent,lpDialogFunc,(LPARAM)0)
#define CreateDialogW(hInstance,lpName,hWndParent,lpDialogFunc) CreateDialogParamW(hInstance,lpName,hWndParent,lpDialogFunc,(LPARAM)0)

#define DialogBoxA(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamA(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)
#define DialogBoxM(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamM(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)
#define DialogBoxW(hInstance,lpTemplate,hWndParent,lpDialogFunc) DialogBoxParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,(LPARAM)0)

#define CreateWindowA(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExA((DWORD)0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)
#define CreateWindowM(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExM((DWORD)0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)
#define CreateWindowW(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) CreateWindowExW((DWORD)0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam)

#define GetNextWindow(hWnd,wCmd) GetWindow(hWnd,wCmd)

#if defined(__NT32)
#define GetWindowLongPtrA GetWindowLongA
#define GetWindowLongPtrM GetWindowLongM
#define GetWindowLongPtrW GetWindowLongW
#define SetWindowLongPtrA SetWindowLongA
#define SetWindowLongPtrM SetWindowLongM
#define SetWindowLongPtrW SetWindowLongW
#endif

#ifdef WINAPI_ANSI_DEFAULT
#define DrawText DrawTextA
#define CreateDialogParam CreateDialogParamA
#define SetWindowsHookEx SetWindowsHookExA
#define SetMenuItemInfo SetMenuItemInfoA
#define GetMenuItemInfo GetMenuItemInfoA
#define LoadMenu LoadMenuA
#define RegisterWindowMessage RegisterWindowMessageA
#define GetProp GetPropA
#define RemoveProp RemovePropA
#define SetProp SetPropA
#define GetKeyboardLayoutName GetKeyboardLayoutNameA
#define LoadKeyboardLayout LoadKeyboardLayoutA
#define DefWindowProc DefWindowProcA
#define GetMessage GetMessageA
#define SendMessage SendMessageA
#define CreateWindowEx CreateWindowExA
#define GetWindowTextLength GetWindowTextLengthA
#define GetWindowText GetWindowTextA
#define RegisterClass RegisterClassA
#define SystemParametersInfo SystemParametersInfoA
#define SetWindowText SetWindowTextA
#define SetDlgItemText SetDlgItemTextA
#define SendDlgItemMessage SendDlgItemMessageA
#define CallWindowProc CallWindowProcA
#define MessageBox MessageBoxA
#define DefDlgProc DefDlgProcA
#define MessageBoxIndirect MessageBoxIndirectA
#define MapVirtualKey MapVirtualKeyA
#define MapVirtualKeyEx MapVirtualKeyExA
#define ModifyMenu ModifyMenuA
#define LoadCursor LoadCursorA
#define LoadIcon LoadIconA
#define AppendMenu AppendMenuA
#define InsertMenu InsertMenuA
#define SetClassLongPtr SetClassLongPtrA
#define SetWindowLongPtr SetWindowLongPtrA
#define DispatchMessage DispatchMessageA
#define IsDialogMessage IsDialogMessageA
#define CreateDialog CreateDialogA
#define SendDlgItemMessage SendDlgItemMessageA
#define PeekMessage PeekMessageA
#define GetMonitorInfo GetMonitorInfoA
#if defined(__NT32)
#define GetWindowLongPtr GetWindowLongA
#define SetWindowLongPtr SetWindowLongA
#else
#define GetWindowLongPtr GetWindowLongPtrA
#define SetWindowLongPtr SetWindowLongPtrA
#endif
#define GetWindowLong GetWindowLongA
#define SetWindowLong SetWindowLongA
#define RegisterClassEx RegisterClassExA
#define RegisterClipboardFormat RegisterClipboardFormatA
#define GetClassLongPtr GetClassLongPtrA
#define PostMessage PostMessageA
#define LoadImage LoadImageA


#define MAKEINTRESOURCE MAKEINTRESOURCEA

#endif

#ifdef WINAPI_UTF8_DEFAULT
#define DrawText DrawTextM
#define CreateDialogParam CreateDialogParamM
#define SetWindowsHookEx SetWindowsHookExM
#define SetMenuItemInfo SetMenuItemInfoM
#define GetMenuItemInfo GetMenuItemInfoM
#define LoadMenu LoadMenuM
#define RegisterWindowMessage RegisterWindowMessageM
#define GetProp GetPropM
#define RemoveProp RemovePropM
#define SetProp SetPropM
#define GetKeyboardLayoutName GetKeyboardLayoutNameM
#define LoadKeyboardLayout LoadKeyboardLayoutM
#define DefWindowProc DefWindowProcM
#define GetMessage GetMessageM
#define SendMessage SendMessageM
#define CreateWindowEx CreateWindowExM
#define GetWindowTextLength GetWindowTextLengthM
#define GetWindowText GetWindowTextM
#define RegisterClass RegisterClassM
#define SystemParametersInfo SystemParametersInfoM
#define SetWindowText SetWindowTextM
#define SetDlgItemText SetDlgItemTextM
#define SendDlgItemMessage SendDlgItemMessageM
#define CallWindowProc CallWindowProcM
#define MessageBox MessageBoxM
#define DefDlgProc DefDlgProcM
#define MessageBoxIndirect MessageBoxIndirectM
#define MapVirtualKey MapVirtualKeyM
#define MapVirtualKeyEx MapVirtualKeyExM
#define ModifyMenu ModifyMenuM
#define LoadCursor LoadCursorM
#define LoadIcon LoadIconM
#define AppendMenu AppendMenuM
#define InsertMenu InsertMenuM
#define SetClassLongPtr SetClassLongPtrM
#define SetWindowLongPtr SetWindowLongPtrM
#define DispatchMessage DispatchMessageM
#define IsDialogMessage IsDialogMessageM
#define CreateDialog CreateDialogM
#define SendDlgItemMessage SendDlgItemMessageM
#define PeekMessage PeekMessageM
#define GetMonitorInfo GetMonitorInfoM
#if defined(__NT32)
#define GetWindowLongPtr GetWindowLongM
#define SetWindowLongPtr SetWindowLongM
#else
#define GetWindowLongPtr GetWindowLongPtrM
#define SetWindowLongPtr SetWindowLongPtrM
#endif
#define GetWindowLong GetWindowLongM
#define SetWindowLong SetWindowLongM
#define RegisterClassEx RegisterClassExM
#define RegisterClipboardFormat RegisterClipboardFormatM
#define GetClassLongPtr GetClassLongPtrM
#define PostMessage PostMessageM
#define LoadImage LoadImageM


#define MAKEINTRESOURCE MAKEINTRESOURCEM

#endif

#ifdef WINAPI_UTF16_DEFAULT
#define DrawText DrawTextW
#define CreateDialogParam CreateDialogParamW
#define SetWindowsHookEx SetWindowsHookExW
#define SetMenuItemInfo SetMenuItemInfoW
#define GetMenuItemInfo GetMenuItemInfoW
#define LoadMenu LoadMenuW
#define RegisterWindowMessage RegisterWindowMessageW
#define GetProp GetPropW
#define RemoveProp RemovePropW
#define SetProp SetPropW
#define GetKeyboardLayoutName GetKeyboardLayoutNameW
#define LoadKeyboardLayout LoadKeyboardLayoutW
#define DefWindowProc DefWindowProcW
#define GetMessage GetMessageW
#define SendMessage SendMessageW
#define CreateWindowEx CreateWindowExW
#define GetWindowTextLength GetWindowTextLengthW
#define GetWindowText GetWindowTextW
#define RegisterClass RegisterClassW
#define SystemParametersInfo SystemParametersInfoW
#define SetWindowText SetWindowTextW
#define SetDlgItemText SetDlgItemTextW
#define SendDlgItemMessage SendDlgItemMessageW
#define CallWindowProc CallWindowProcW
#define MessageBox MessageBoxW
#define DefDlgProc DefDlgProcW
#define MessageBoxIndirect MessageBoxIndirectW
#define MapVirtualKey MapVirtualKeyW
#define MapVirtualKeyEx MapVirtualKeyExW
#define ModifyMenu ModifyMenuW
#define LoadCursor LoadCursorW
#define LoadIcon LoadIconW
#define AppendMenu AppendMenuW
#define InsertMenu InsertMenuW
#define SetClassLongPtr SetClassLongPtrW
#define SetWindowLongPtr SetWindowLongPtrW
#define DispatchMessage DispatchMessageW
#define IsDialogMessage IsDialogMessageW
#define CreateDialog CreateDialogW
#define SendDlgItemMessage SendDlgItemMessageW
#define PeekMessage PeekMessageW
#define GetMonitorInfo GetMonitorInfoW
#if defined(__NT32)
#define GetWindowLongPtr GetWindowLongW
#define SetWindowLongPtr SetWindowLongW
#else
#define GetWindowLongPtr GetWindowLongPtrW
#define SetWindowLongPtr SetWindowLongPtrW
#endif
#define GetWindowLong GetWindowLongW
#define SetWindowLong SetWindowLongW
#define RegisterClassEx RegisterClassExW
#define RegisterClipboardFormat RegisterClipboardFormatW
#define GetClassLongPtr GetClassLongPtrW
#define PostMessage PostMessageW
#define LoadImage LoadImageW


#define MAKEINTRESOURCE MAKEINTRESOURCEW

#endif

#endif
